{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx\",\n  _s = $RefreshSig$();\nimport ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\nimport ButtonGroup from \"./../comp/module/ButtonGroup\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const scoreRef = useRef(0);\n  const [setPage] = useMovePage();\n  const {\n    screenData,\n    timer\n  } = useSelector(state => {\n    return {\n      screenData: state.data.screenData,\n      timer: state.data.timer\n    };\n  });\n  const Table = () => {\n    let i = -1;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mole-list clearfix\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mole.utils.createArray(screenData.column).map((column, columnIdx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: mole.utils.createArray(screenData.row).map((row, rowIdx) => {\n              i = i + 1;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mole\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\\uB450\\uB354\\uC9C0 \\uC774\\uBBF8\\uC9C0\",\n                  id: i.toString(),\n                  src: \"images/mole.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 45\n                }, this)\n              }, columnIdx + '-' + rowIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this);\n            })\n          }, columnIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  };\n  const getRandomHoles = () => {\n    const result = [];\n    for (let i = 0; i < screenData.count; i++) {\n      result.push(mole.utils.randomNum(screenData.row * screenData.column));\n    }\n    return result;\n  };\n  const getHolesID = () => {\n    const result = [];\n    for (let i = 0; i < getRandomHoles().length; i++) {\n      result.push(document.getElementById(`${getRandomHoles()[i]}`));\n    }\n    return result;\n  };\n  const playingMole = () => {\n    const data = getHolesID();\n    // 두더지 등장\n    const showMole = callback => {\n      data.forEach(element => {\n        // 애니메이션 추가\n        mole.utils.addClassActive(element);\n        // 클릭 이벤트 추가\n        element === null || element === void 0 ? void 0 : element.addEventListener('click', () => {\n          debugger;\n          scoreRef.current = scoreRef.current + 1;\n          catchMole(element && element);\n        });\n      });\n      setTimeout(overTimeMole, 2000);\n    };\n\n    // 두더지 터치\n    const catchMole = element => {\n      mole.utils.removeClassActive(element);\n      element === null || element === void 0 ? void 0 : element.removeEventListener('click', () => {});\n      clearTimeout(setTimeout(playingMole, 2000));\n    };\n\n    // 시간 초과\n    const overTimeMole = () => {\n      data.forEach(element => {\n        catchMole(element);\n      });\n\n      // test중\n      // 게임 모드에 따라 구분\n    };\n\n    showMole();\n    setTimeout(playingMole, 2000);\n  };\n  console.log(scoreRef);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-text\",\n          children: \"Score :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"count-score\",\n          ref: scoreRef,\n          children: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      callback: info => {\n        if (!['pause', 'stop'].includes(info.nextCode)) {\n          mole.showModal('ModalCountDown');\n          // 카운트 다운 종료 후 실행\n          setTimeout(() => {\n            playingMole();\n          }, 4000);\n        } else if (['start', 'pause'].includes(info.nextCode)) {\n          mole.setState('timer', info.nextCode);\n          clearTimeout(setTimeout(playingMole, 1000));\n        }\n\n        // 그만하기인 경우 준비화면으로 이동\n        if (info.nextCode === 'stop') {\n          mole.setState('timer', 'none');\n          setPage('/');\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"DKDzLt/h/zrUlXtjptu4VIxwThY=\", false, function () {\n  return [useMovePage, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["ProgressBar","useSelector","useMovePage","mole","ButtonGroup","useRef","Game","scoreRef","setPage","screenData","timer","state","data","Table","i","utils","createArray","column","map","columnIdx","row","rowIdx","toString","getRandomHoles","result","count","push","randomNum","getHolesID","length","document","getElementById","playingMole","showMole","callback","forEach","element","addClassActive","addEventListener","current","catchMole","setTimeout","overTimeMole","removeClassActive","removeEventListener","clearTimeout","console","log","info","includes","nextCode","showModal","setState"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx"],"sourcesContent":["import ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType, listInfoType } from '../type/Type';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\nimport Score from \"./../comp/module/Score\";\nimport ButtonGroup from \"./../comp/module/ButtonGroup\";\nimport { useRef } from \"react\";\n\nconst Game = () => {\n    const scoreRef = useRef<any>(0);\n    const [ setPage ] = useMovePage();\n    const { screenData, timer } = useSelector((state: StoreStateType) => {\n        return {\n            screenData: state.data.screenData,\n            timer: state.data.timer\n        }\n    });\n\n    const Table = () => {\n        let i = -1;\n        return (\n            <table className=\"mole-list clearfix\" >\n                <tbody>\n                    {mole.utils.createArray(screenData.column).map((column: number, columnIdx: number) => {\n                        return (\n                            <tr key={columnIdx}>\n                                {mole.utils.createArray(screenData.row).map((row: number, rowIdx: number) => {\n                                    i = i + 1;\n                                    return (\n                                        <td className=\"mole\" \n                                            key={columnIdx + '-' + rowIdx} \n                                        >\n                                            <img alt=\"두더지 이미지\" \n                                                id={i.toString()}\n                                                src=\"images/mole.png\"\n                                                />\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        )\n    }\n\n    const getRandomHoles = () => {\n        const result = []\n\n        for (let i = 0; i<screenData.count; i++) {\n            result.push(mole.utils.randomNum(screenData.row * screenData.column));\n        }\n\n        return result;\n    }\n    \n    const getHolesID = () => {\n        const result = [];\n\n        for (let i=0; i<getRandomHoles().length; i++) {\n            result.push(document.getElementById(`${getRandomHoles()[i]}`));\n        }\n\n        return result;\n    }\n\n    const playingMole = () => {\n        const data = getHolesID();\n        // 두더지 등장\n        const showMole = (callback?: Function) => {\n            data.forEach(element => {\n                // 애니메이션 추가\n                mole.utils.addClassActive(element);\n                // 클릭 이벤트 추가\n                element?.addEventListener('click', () => {\n                    debugger\n                    scoreRef.current = scoreRef.current + 1;\n                    catchMole(element && element)\n                });\n            });\n\n            setTimeout(overTimeMole, 2000);\n        }\n\n        // 두더지 터치\n        const catchMole = (element: Element) => {\n            mole.utils.removeClassActive(element);\n            element?.removeEventListener('click', () => {});\n            \n            clearTimeout(setTimeout(playingMole, 2000));\n        }\n\n        // 시간 초과\n        const overTimeMole =() => {\n\n            data.forEach((element: any) => {\n                catchMole(element)\n            })\n\n            // test중\n            // 게임 모드에 따라 구분\n        }\n        \n        showMole();\n        setTimeout(playingMole, 2000);\n    }\nconsole.log(scoreRef)\n    return (\n        <div className=\"main\">\n            <ProgressBar />\n            <div className=\"score-box\">\n                <div className=\"score-wrap\">\n                    <p className=\"score-text\">Score :</p>\n                    <p className=\"count-score\" ref={scoreRef}>{0}</p>\n                </div>\n            </div>\n            <Table/>\n            <ButtonGroup callback={(info: listInfoType) => {\n                if (!['pause', 'stop'].includes(info.nextCode)) {\n                    mole.showModal('ModalCountDown');\n                    // 카운트 다운 종료 후 실행\n                    setTimeout(() => {\n                        playingMole()\n                    }, 4000)\n                } else if (['start','pause'].includes(info.nextCode)) {\n                    mole.setState('timer', info.nextCode);\n                    clearTimeout(setTimeout(playingMole, 1000));\n                }\n    \n                // 그만하기인 경우 준비화면으로 이동\n                if (info.nextCode === 'stop') {\n                    mole.setState('timer', 'none');\n                    setPage('/'); \n                }\n            }}/>\n        </div>\n    )\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}