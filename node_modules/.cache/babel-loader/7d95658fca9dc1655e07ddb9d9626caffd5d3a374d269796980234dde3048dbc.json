{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/manager/Modal.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { useSelector } from 'react-redux';\nimport mole from \"../core/Mole\";\nimport ModalCountDown from \"../modal/ModalCountDown\";\nimport ModalResult from \"../modal/ModalResult\";\nimport ModalReadyTest from \"../modal/ModalReadyTest\";\nimport ModalGameTest from \"../modal/ModalGameTest\";\nimport ModalRankTest from \"../modal/ModalRankTest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = () => {\n  _s();\n  const refBtn = useRef(null);\n  const {\n    modalName,\n    modalOption,\n    isShowModal\n  } = useSelector(state => {\n    return {\n      modalName: state.view.modalName,\n      modalOption: state.view.modalOption,\n      isShowModal: state.view.isShowModal\n    };\n  });\n  const loadPopup = () => {\n    switch (modalName) {\n      case 'ModalCountDown':\n        return /*#__PURE__*/_jsxDEV(ModalCountDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 44\n        }, this);\n      case 'ModalResult':\n        return /*#__PURE__*/_jsxDEV(ModalResult, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 44\n        }, this);\n      case 'ModalReadyTest':\n        return /*#__PURE__*/_jsxDEV(ModalReadyTest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 44\n        }, this);\n      case 'ModalGameTest':\n        return /*#__PURE__*/_jsxDEV(ModalGameTest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 44\n        }, this);\n      case 'ModalRankTest':\n        return /*#__PURE__*/_jsxDEV(ModalRankTest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 44\n        }, this);\n      default:\n        return;\n    }\n  };\n  useEffect(() => {\n    const focus = setTimeout(() => {\n      var _refBtn$current;\n      (_refBtn$current = refBtn.current) === null || _refBtn$current === void 0 ? void 0 : _refBtn$current.focus();\n    }, 1000);\n    return () => {\n      clearInterval(focus);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShowModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalName === 'ModalCountDown' ? \"modal-countdown-body\" : \"modal-body\",\n        children: [loadPopup(), (modalOption === null || modalOption === void 0 ? void 0 : modalOption.confirm) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            modalOption.callbackFunc && modalOption.callbackFunc();\n            mole.hideModal();\n          },\n          ref: refBtn,\n          children: modalOption === null || modalOption === void 0 ? void 0 : modalOption.confirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"kqKi4XvtoPU2HjdoXZciza3Iric=\", false, function () {\n  return [useSelector];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useEffect","useRef","useSelector","mole","ModalCountDown","ModalResult","ModalReadyTest","ModalGameTest","ModalRankTest","Modal","refBtn","modalName","modalOption","isShowModal","state","view","loadPopup","focus","setTimeout","current","clearInterval","confirm","callbackFunc","hideModal"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/manager/Modal.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../type/Type';\nimport mole from \"../core/Mole\";\nimport ModalCountDown from \"../modal/ModalCountDown\";\nimport ModalResult from \"../modal/ModalResult\";\nimport ModalReadyTest from \"../modal/ModalReadyTest\";\nimport ModalGameTest from \"../modal/ModalGameTest\";\nimport ModalRankTest from \"../modal/ModalRankTest\";\n\nconst Modal = () => {\n    const refBtn = useRef<HTMLButtonElement>(null);\n    const { modalName, modalOption, isShowModal } = useSelector((state: StoreStateType) => {\n        return {\n            modalName: state.view.modalName,\n            modalOption: state.view.modalOption,\n            isShowModal: state.view.isShowModal,\n        };\n    });\n\n    \n    const loadPopup = () => { \n        switch (modalName) {\n            case 'ModalCountDown':  return <ModalCountDown/>;\n            case 'ModalResult':     return <ModalResult/>;\n            case 'ModalReadyTest':  return <ModalReadyTest/>;\n            case 'ModalGameTest':   return <ModalGameTest/>;\n            case 'ModalRankTest':   return <ModalRankTest/>;\n            default: return;\n        }\n    }\n\n    useEffect(() => {\n        const focus = setTimeout(() => {\n            refBtn.current?.focus();\n        }, 1000);\n\n        return () => { clearInterval(focus) }\n    }, []);\n\n    return (\n        <>\n        { isShowModal && \n            <div className=\"modal\">\n                <div className={modalName === 'ModalCountDown' ? \"modal-countdown-body\" : \"modal-body\"}>\n                    {loadPopup()}\n                    {modalOption?.confirm && \n                        <button className=\"button\" \n                                onClick={() => {\n                                    modalOption.callbackFunc && modalOption.callbackFunc();\n                                    mole.hideModal()}\n                                }\n                                ref={refBtn}\n                        >{modalOption?.confirm}</button>\n                    }\n                </div>                \n            </div>\n        }\n        </>\n    );\n}\n\nexport default Modal;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAAC;AAAA;AAEnD,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAMC,MAAM,GAAGT,MAAM,CAAoB,IAAI,CAAC;EAC9C,MAAM;IAAEU,SAAS;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGX,WAAW,CAAEY,KAAqB,IAAK;IACnF,OAAO;MACHH,SAAS,EAAEG,KAAK,CAACC,IAAI,CAACJ,SAAS;MAC/BC,WAAW,EAAEE,KAAK,CAACC,IAAI,CAACH,WAAW;MACnCC,WAAW,EAAEC,KAAK,CAACC,IAAI,CAACF;IAC5B,CAAC;EACL,CAAC,CAAC;EAGF,MAAMG,SAAS,GAAG,MAAM;IACpB,QAAQL,SAAS;MACb,KAAK,gBAAgB;QAAG,oBAAO,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA,QAAE;MAChD,KAAK,aAAa;QAAM,oBAAO,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAE;MAC7C,KAAK,gBAAgB;QAAG,oBAAO,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA,QAAE;MAChD,KAAK,eAAe;QAAI,oBAAO,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAE;MAC/C,KAAK,eAAe;QAAI,oBAAO,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAE;MAC/C;QAAS;IAAO;EAExB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZ,MAAMiB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAAA;MAC3B,mBAAAR,MAAM,CAACS,OAAO,oDAAd,gBAAgBF,KAAK,EAAE;IAC3B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MAAEG,aAAa,CAACH,KAAK,CAAC;IAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UACEJ,WAAW,iBACT;MAAK,SAAS,EAAC,OAAO;MAAA,uBAClB;QAAK,SAAS,EAAEF,SAAS,KAAK,gBAAgB,GAAG,sBAAsB,GAAG,YAAa;QAAA,WAClFK,SAAS,EAAE,EACX,CAAAJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,OAAO,kBACjB;UAAQ,SAAS,EAAC,QAAQ;UAClB,OAAO,EAAE,MAAM;YACXT,WAAW,CAACU,YAAY,IAAIV,WAAW,CAACU,YAAY,EAAE;YACtDnB,IAAI,CAACoB,SAAS,EAAE;UAAA,CACnB;UACD,GAAG,EAAEb,MAAO;UAAA,UAClBE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES;QAAO;UAAA;UAAA;UAAA;QAAA,QAAU;MAAA;QAAA;QAAA;QAAA;MAAA;IAElC;MAAA;MAAA;MAAA;IAAA;EACJ,iBAEP;AAEX,CAAC;AAAA,GAlDKZ,KAAK;EAAA,QAEyCP,WAAW;AAAA;AAAA,KAFzDO,KAAK;AAoDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}