{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/Alert.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\n// div 태그에 Modal을 구현하는데 전체적으로 필요한 CSS를 구현\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalContainer = styled.div`\n  // Open Modal 글자의 위치를 중간으로 이동\n    height: 15rem;\n    text-align: center;\n    margin: 120px auto;\n`;\n\n// div 태그에 Modal이 떴을 때의(클릭 후) 배경을 깔아주는 CSS를 구현\n_c = ModalContainer;\nexport const ModalBackdrop = styled.div`\n    background-color: greenyellow;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n\n// button 태그에 Modal 버튼을 보여주는 CSS를 구현\n_c2 = ModalBackdrop;\nexport const ModalBtn = styled.button`\n    background-color: #4000c7;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n    cursor: grab;\n`;\n\n// div 태그로서 Modal이 떴을 때 Modal 창의 CSS를 구현\n// attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가\n_c3 = ModalBtn;\nexport const ModalView = styled.div.attrs(props => ({\n  role: 'dialog'\n}))`\n    // Modal창 CSS를 구현\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n_c4 = ModalView;\nconst Alert = () => {\n  _s();\n  // Modal 오픈 여부를 State로 관리\n  const [isOpen, setIsOpen] = useState(false);\n\n  // 이벤트 핸들러 함수로 state를 변경\n  const openModalHandler = e => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ModalBtn, {\n        onClick: openModalHandler,\n        children: isOpen ? \"Opened!\" : \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(ModalBackdrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this) && /*#__PURE__*/_jsxDEV(ModalView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Alert, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c5 = Alert;\nexport default Alert;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ModalContainer\");\n$RefreshReg$(_c2, \"ModalBackdrop\");\n$RefreshReg$(_c3, \"ModalBtn\");\n$RefreshReg$(_c4, \"ModalView\");\n$RefreshReg$(_c5, \"Alert\");","map":{"version":3,"names":["styled","useState","ModalContainer","div","ModalBackdrop","ModalBtn","button","ModalView","attrs","props","role","Alert","isOpen","setIsOpen","openModalHandler","e"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/Alert.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { useState } from \"react\";\n\n// div 태그에 Modal을 구현하는데 전체적으로 필요한 CSS를 구현\nexport const ModalContainer = styled.div`\n  // Open Modal 글자의 위치를 중간으로 이동\n    height: 15rem;\n    text-align: center;\n    margin: 120px auto;\n`;\n\n// div 태그에 Modal이 떴을 때의(클릭 후) 배경을 깔아주는 CSS를 구현\nexport const ModalBackdrop = styled.div`\n    background-color: greenyellow;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n\n// button 태그에 Modal 버튼을 보여주는 CSS를 구현\nexport const ModalBtn = styled.button`\n    background-color: #4000c7;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n    cursor: grab;\n`;\n\n// div 태그로서 Modal이 떴을 때 Modal 창의 CSS를 구현\n  // attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가\nexport const ModalView = styled.div.attrs(props => ({ \n    role: 'dialog'\n}))`\n    // Modal창 CSS를 구현\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n\nconst Alert = () => {\n    // Modal 오픈 여부를 State로 관리\n    const [isOpen, setIsOpen] = useState(false);\n\n    // 이벤트 핸들러 함수로 state를 변경\n    const openModalHandler = (e: any) => {\n        setIsOpen(!isOpen)\n    };\n\n    return (\n        <>\n        <ModalContainer>\n            <ModalBtn onClick={openModalHandler}> \n            {isOpen ? \"Opened!\" : \"Open Modal\"}\n            </ModalBtn>\n            {isOpen ? (<ModalBackdrop />)&&(<ModalView />) : \"\"}\n        </ModalContainer>\n        </>\n    );\n    \n}\n\nexport default Alert;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA;AAAA;AACA,OAAO,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAI;AACzC;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,KAPaD,cAAc;AAQ3B,OAAO,MAAME,aAAa,GAAGJ,MAAM,CAACG,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,MATaC,aAAa;AAU1B,OAAO,MAAMC,QAAQ,GAAGL,MAAM,CAACM,MAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACE;AAAA,MAXWD,QAAQ;AAYrB,OAAO,MAAME,SAAS,GAAGP,MAAM,CAACG,GAAG,CAACK,KAAK,CAACC,KAAK,KAAK;EAChDC,IAAI,EAAE;AACV,CAAC,CAAC,CAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MATWH,SAAS;AAWtB,MAAMI,KAAK,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMa,gBAAgB,GAAIC,CAAM,IAAK;IACjCF,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,oBACI;IAAA,uBACA,QAAC,cAAc;MAAA,wBACX,QAAC,QAAQ;QAAC,OAAO,EAAEE,gBAAiB;QAAA,UACnCF,MAAM,GAAG,SAAS,GAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QACvB,EACVA,MAAM,GAAG,aAAC,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA,QAAG,iBAAI,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAI,GAAG,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACtC,iBACd;AAGX,CAAC;AAAA,GApBKD,KAAK;AAAA,MAALA,KAAK;AAsBX,eAAeA,KAAK;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}