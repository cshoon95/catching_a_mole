{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/comp/Progressbar.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import { withKnobs } from '@storybook/addon-knobs'\\nimport { useState } from \\\"react\\\";\\n\\ntype ProgressbarType = {\\n    /** 설정할 값 */\\n    time: number;\\n}\\n\\nexport const ProgressBar = (props: ProgressbarType) => {\\n    const [ timer, setTimer ] = useState(60);\\n\\n    setInterval(() => {\\n        setTimer(time - 1);\\n        if (timer === 'start' && isStart) {\\n            setScore(mole.module.getScore());\\n\\n            if (time === 0) {\\n                mole.module.stopMole();\\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\\n                mole.setState('timer', 'end');\\n                mole.setState('showResult', true);\\n                mole.setState('score', mole.module.getScore());\\n                setPage('/rank');\\n            }\\n        }\\n    }, 1000)\\n    return (\\n        <div className='progress-wrap'>\\n            <progress className='progress-bar' value={props.time} max={props.time}/>\\n            <span className='progress-timer'>{`${props.time}초`}</span>\\n        </div>\\n    )\\n}\\nexport default {\\n    component: ProgressBar,\\n    title: 'Comp/ProgressBar',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nProgressBar.args = {\\n    message: '두더지를 잡아볼까요?',\\n    confirm: '확인',\\n    cancel: '취소',\\n    closeHandler: () => {}\\n}\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"ProgressBar\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 9\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 33\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 9\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 33\n    }\n  }\n};\nimport { withKnobs } from '@storybook/addon-knobs';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProgressBar = props => {\n  _s();\n  const [timer, setTimer] = useState(60);\n  setInterval(() => {\n    setTimer(time - 1);\n    if (timer === 'start' && isStart) {\n      setScore(mole.module.getScore());\n      if (time === 0) {\n        mole.module.stopMole();\n        mole.setState('rankList', [...rankList, {\n          score: mole.module.getScore(),\n          sysdate: mole.utils.sysdate(new Date())\n        }]);\n        mole.setState('timer', 'end');\n        mole.setState('showResult', true);\n        mole.setState('score', mole.module.getScore());\n        setPage('/rank');\n      }\n    }\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress-bar\",\n      value: props.time,\n      max: props.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"progress-timer\",\n      children: `${props.time}초`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ProgressBar, \"OZYQj+dmNzVwfS/Cx+30r/wKjBc=\");\n_c = ProgressBar;\nexport default {\n  component: ProgressBar,\n  title: 'Comp/ProgressBar',\n  decorators: [withKnobs]\n};\nProgressBar.args = {\n  message: '두더지를 잡아볼까요?',\n  confirm: '확인',\n  cancel: '취소',\n  closeHandler: () => {}\n};\nProgressBar.parameters = {\n  storySource: {\n    source: \"(props: ProgressbarType) => {\\n    const [ timer, setTimer ] = useState(60);\\n\\n    setInterval(() => {\\n        setTimer(time - 1);\\n        if (timer === 'start' && isStart) {\\n            setScore(mole.module.getScore());\\n\\n            if (time === 0) {\\n                mole.module.stopMole();\\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\\n                mole.setState('timer', 'end');\\n                mole.setState('showResult', true);\\n                mole.setState('score', mole.module.getScore());\\n                setPage('/rank');\\n            }\\n        }\\n    }, 1000)\\n    return (\\n        <div className='progress-wrap'>\\n            <progress className='progress-bar' value={props.time} max={props.time}/>\\n            <span className='progress-timer'>{`${props.time}초`}</span>\\n        </div>\\n    )\\n}\"\n  },\n  ...ProgressBar.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");\nexport const __namedExportsOrder = [\"ProgressBar\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","withKnobs","useState","ProgressBar","props","timer","setTimer","setInterval","time","isStart","setScore","mole","module","getScore","stopMole","setState","rankList","score","sysdate","utils","Date","setPage","component","title","decorators","args","message","confirm","cancel","closeHandler","parameters","storySource","source"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/comp/Progressbar.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { withKnobs } from '@storybook/addon-knobs'\\nimport { useState } from \\\"react\\\";\\n\\ntype ProgressbarType = {\\n    /** 설정할 값 */\\n    time: number;\\n}\\n\\nexport const ProgressBar = (props: ProgressbarType) => {\\n    const [ timer, setTimer ] = useState(60);\\n\\n    setInterval(() => {\\n        setTimer(time - 1);\\n        if (timer === 'start' && isStart) {\\n            setScore(mole.module.getScore());\\n\\n            if (time === 0) {\\n                mole.module.stopMole();\\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\\n                mole.setState('timer', 'end');\\n                mole.setState('showResult', true);\\n                mole.setState('score', mole.module.getScore());\\n                setPage('/rank');\\n            }\\n        }\\n    }, 1000)\\n    return (\\n        <div className='progress-wrap'>\\n            <progress className='progress-bar' value={props.time} max={props.time}/>\\n            <span className='progress-timer'>{`${props.time}초`}</span>\\n        </div>\\n    )\\n}\\nexport default {\\n    component: ProgressBar,\\n    title: 'Comp/ProgressBar',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nProgressBar.args = {\\n    message: '두더지를 잡아볼까요?',\\n    confirm: '확인',\\n    cancel: '취소',\\n    closeHandler: () => {}\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ProgressBar\":{\"startLoc\":{\"col\":27,\"line\":9},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":27,\"line\":9},\"endBody\":{\"col\":1,\"line\":33}}};\n    \nimport { withKnobs } from '@storybook/addon-knobs'\nimport { useState } from \"react\";\n\ntype ProgressbarType = {\n    /** 설정할 값 */\n    time: number;\n}\n\nexport const ProgressBar = (props: ProgressbarType) => {\n    const [ timer, setTimer ] = useState(60);\n\n    setInterval(() => {\n        setTimer(time - 1);\n        if (timer === 'start' && isStart) {\n            setScore(mole.module.getScore());\n\n            if (time === 0) {\n                mole.module.stopMole();\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\n                mole.setState('timer', 'end');\n                mole.setState('showResult', true);\n                mole.setState('score', mole.module.getScore());\n                setPage('/rank');\n            }\n        }\n    }, 1000)\n    return (\n        <div className='progress-wrap'>\n            <progress className='progress-bar' value={props.time} max={props.time}/>\n            <span className='progress-timer'>{`${props.time}초`}</span>\n        </div>\n    )\n};export default {\n    component: ProgressBar,\n    title: 'Comp/ProgressBar',\n    decorators: [withKnobs]\n    \n}\n\nProgressBar.args = {\n    message: '두더지를 잡아볼까요?',\n    confirm: '확인',\n    cancel: '취소',\n    closeHandler: () => {}\n}\n\n\n\nProgressBar.parameters = { storySource: { source: \"(props: ProgressbarType) => {\\n    const [ timer, setTimer ] = useState(60);\\n\\n    setInterval(() => {\\n        setTimer(time - 1);\\n        if (timer === 'start' && isStart) {\\n            setScore(mole.module.getScore());\\n\\n            if (time === 0) {\\n                mole.module.stopMole();\\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\\n                mole.setState('timer', 'end');\\n                mole.setState('showResult', true);\\n                mole.setState('score', mole.module.getScore());\\n                setPage('/rank');\\n            }\\n        }\\n    }, 1000)\\n    return (\\n        <div className='progress-wrap'>\\n            <progress className='progress-bar' value={props.time} max={props.time}/>\\n            <span className='progress-timer'>{`${props.time}초`}</span>\\n        </div>\\n    )\\n}\" }, ...ProgressBar.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,4zCAA4zC;AAC50C;AACA,IAAIC,iBAAiB,GAAG;EAAC,aAAa,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAC,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAC,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAEvK,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAOjC,OAAO,MAAMC,WAAW,GAAIC,KAAsB,IAAK;EAAA;EACnD,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAExCK,WAAW,CAAC,MAAM;IACdD,QAAQ,CAACE,IAAI,GAAG,CAAC,CAAC;IAClB,IAAIH,KAAK,KAAK,OAAO,IAAII,OAAO,EAAE;MAC9BC,QAAQ,CAACC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC;MAEhC,IAAIL,IAAI,KAAK,CAAC,EAAE;QACZG,IAAI,CAACC,MAAM,CAACE,QAAQ,EAAE;QACtBH,IAAI,CAACI,QAAQ,CAAC,UAAU,EAAE,CAAC,GAAGC,QAAQ,EAAE;UAACC,KAAK,EAAEN,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;UAAEK,OAAO,EAAEP,IAAI,CAACQ,KAAK,CAACD,OAAO,CAAC,IAAIE,IAAI,EAAE;QAAC,CAAC,CAAE,CAAC;QACnHT,IAAI,CAACI,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC;QAC7BJ,IAAI,CAACI,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC;QACjCJ,IAAI,CAACI,QAAQ,CAAC,OAAO,EAAEJ,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC;QAC9CQ,OAAO,CAAC,OAAO,CAAC;MACpB;IACJ;EACJ,CAAC,EAAE,IAAI,CAAC;EACR,oBACI;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC1B;MAAU,SAAS,EAAC,cAAc;MAAC,KAAK,EAAEjB,KAAK,CAACI,IAAK;MAAC,GAAG,EAAEJ,KAAK,CAACI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACxE;MAAM,SAAS,EAAC,gBAAgB;MAAA,UAAG,GAAEJ,KAAK,CAACI,IAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEd,CAAC;AAAC,GAxBWL,WAAW;AAAA,KAAXA,WAAW;AAwBtB,eAAe;EACbmB,SAAS,EAAEnB,WAAW;EACtBoB,KAAK,EAAE,kBAAkB;EACzBC,UAAU,EAAE,CAACvB,SAAS;AAE1B,CAAC;AAEDE,WAAW,CAACsB,IAAI,GAAG;EACfC,OAAO,EAAE,aAAa;EACtBC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,IAAI;EACZC,YAAY,EAAE,MAAM,CAAC;AACzB,CAAC;AAID1B,WAAW,CAAC2B,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAi5B,CAAC;EAAE,GAAG7B,WAAW,CAAC2B;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}