{"ast":null,"code":"import mole from \"./Mole\";\nlet score = 0;\nexport default class Module {\n  constructor() {\n    this.getRowXColumnsCount = () => {\n      const screenData = mole.getState('screenData');\n      return screenData.row * screenData.column;\n    };\n    this.getRandomHoles = () => {\n      const screenData = mole.getState('screenData');\n      const result = [];\n      for (let i = 0; i < screenData.count; i++) {\n        result.push(mole.utils.randomNum(this.getRowXColumnsCount()));\n      }\n      return result;\n    };\n    this.getHolesEl = () => {\n      const result = [];\n      for (let i = 0; i < this.getRandomHoles().length; i++) {\n        result.push(document.getElementById(`${this.getRandomHoles()[i]}`));\n      }\n      return result;\n    };\n    this.playingMole = onClick => {\n      // 두더지 등장\n      const showMole = () => {\n        const elList = this.getHolesEl();\n        console.log('elList', elList);\n        elList.forEach(element => {\n          // 애니메이션 추가\n          mole.utils.addClassActive(element);\n          console.log('element', element);\n          // 클릭 이벤트 추가\n          element === null || element === void 0 ? void 0 : element.addEventListener('click', e => {\n            // hit 이미지로 수정\n            console.log('click', score);\n            e.target.src = '/images/mole_hit_hole.png';\n            score = score + 1;\n            setTimeout(() => {\n              // 다시 이미지 복구\n              e.target.src = '/images/mole.png';\n            }, 500);\n\n            // 두더지 처리\n            catchMole(element);\n          });\n        });\n        setTimeout(this.stoppingMole, 3000);\n      };\n\n      // 두더지 터치\n      const catchMole = element => {\n        mole.utils.removeClassActive(element);\n        element === null || element === void 0 ? void 0 : element.removeEventListener('click', e => {\n          e.target.src = '/images/mole.png';\n        });\n        clearTimeout(setTimeout(this.stoppingMole));\n        clearTimeout(setTimeout(this.playingMole));\n      };\n      showMole();\n      setTimeout(this.playingMole, 3000);\n    };\n    this.stoppingMole = () => {\n      for (let i = 0; i < this.getRowXColumnsCount(); i++) {\n        const element = document.getElementById(i.toString());\n        mole.utils.removeClassActive(element);\n        element === null || element === void 0 ? void 0 : element.removeEventListener('click', () => {});\n      }\n\n      // clearTimeout(setTimeout(this.playingMole))\n    };\n    this.getScore = () => {\n      return score;\n    };\n  }\n}","map":{"version":3,"names":["mole","score","Module","getRowXColumnsCount","screenData","getState","row","column","getRandomHoles","result","i","count","push","utils","randomNum","getHolesEl","length","document","getElementById","playingMole","onClick","showMole","elList","console","log","forEach","element","addClassActive","addEventListener","e","target","src","setTimeout","catchMole","stoppingMole","removeClassActive","removeEventListener","clearTimeout","toString","getScore"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Module.ts"],"sourcesContent":["import mole from \"./Mole\";\n\nlet score = 0;\n\nexport default class Module {\n    /** 행x열의 값 */\n    getRowXColumnsCount = () => {\n        const screenData = mole.getState('screenData');\n        return screenData.row * screenData.column;\n    }\n\n    /** 두더지가 출현할 Elment Index */\n    getRandomHoles = () => {\n        const screenData = mole.getState('screenData');\n        const result = []\n\n        for (let i = 0; i<screenData.count; i++) {\n            result.push(mole.utils.randomNum(this.getRowXColumnsCount()));\n        }\n\n        return result;\n    }\n\n    /** 출현한 두더지 Element List */ \n    getHolesEl = () => {\n        const result = [];\n\n        for (let i=0; i<this.getRandomHoles().length; i++) {\n            result.push(document.getElementById(`${this.getRandomHoles()[i]}`));\n        }\n\n        return result;\n    }\n\n    /** 두더지 show */ \n    playingMole = (onClick?: Function) => {\n        // 두더지 등장\n        const showMole = () => {\n            const elList = this.getHolesEl();\n            console.log('elList', elList);\n            \n            elList.forEach(element => {\n                // 애니메이션 추가\n                mole.utils.addClassActive(element);\n\n                console.log('element', element);\n                // 클릭 이벤트 추가\n                element?.addEventListener('click', (e: any) => {\n                    // hit 이미지로 수정\n                    console.log('click', score)\n                    e.target.src = '/images/mole_hit_hole.png';\n                    score = score + 1;\n\n                    setTimeout(() => {\n                        // 다시 이미지 복구\n                        e.target.src = '/images/mole.png';\n                    }, 500)\n\n                    // 두더지 처리\n                    catchMole(element)\n                });\n            });\n\n            setTimeout(this.stoppingMole, 3000);\n        }\n\n        // 두더지 터치\n        const catchMole = (element: Element) => {\n            mole.utils.removeClassActive(element);\n            element?.removeEventListener('click', (e: any) => {\n                e.target.src = '/images/mole.png';\n            });\n            \n            clearTimeout(setTimeout(this.stoppingMole));\n            clearTimeout(setTimeout(this.playingMole));\n        }\n\n        showMole();\n        setTimeout(this.playingMole, 3000);\n    }\n\n    /** 두더지 hide */ \n    stoppingMole = () => {\n        for (let i = 0; i<this.getRowXColumnsCount(); i++) {\n            const element = document.getElementById(i.toString());\n\n            mole.utils.removeClassActive(element);\n            element?.removeEventListener('click', () => {});\n        }\n\n        // clearTimeout(setTimeout(this.playingMole))\n    }\n\n    getScore = () => {\n        return score;\n    }\n}   \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}