{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/ProgressBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useMovePage from \"../../hooks/useMovePage\";\nimport useInterval from \"../../hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgressBar = () => {\n  _s();\n  const [setPage] = useMovePage();\n  const [time, setTime] = useState(60);\n  const {\n    timer\n  } = useSelector(state => {\n    return {\n      timer: state.data.timer\n    };\n  });\n  useInterval(() => {\n    if (timer === 'start') {\n      setTime(time - 1);\n      if (time === 0) {\n        // result 페이지로 이동\n        setPage('/result');\n      }\n    }\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"progress-bar\",\n      value: time,\n      max: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProgressBar, \"xS2btOTneoPUn2LKroAYNTIPyII=\", false, function () {\n  return [useMovePage, useSelector, useInterval];\n});\n_c = ProgressBar;\nexport default _c2 = /*#__PURE__*/React.memo(ProgressBar);\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useSelector","useMovePage","useInterval","ProgressBar","setPage","time","setTime","timer","state","data","memo"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/ProgressBar.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../../type/Type';\nimport useMovePage from \"../../hooks/useMovePage\";\nimport useInterval from \"../../hooks/useInterval\";\n\nconst ProgressBar = () => {\n    const [ setPage ] = useMovePage();\n    const [ time, setTime ] = useState(60);\n    const { timer } = useSelector((state: StoreStateType) => {\n        return {\n            timer: state.data.timer\n        }\n    });\n    \n    useInterval(() => {\n        if (timer === 'start') {\n            setTime(time - 1);\n\n            if (time === 0) {\n                // result 페이지로 이동\n                setPage('/result');\n            }\n        }\n    }, 1000);\n\n    return (\n        <>\n        <progress className=\"progress-bar\" value={time} max={60}/>\n        <span>{time}</span>\n        </>\n    )\n}\n\nexport default React.memo(ProgressBar);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAA2B,OAAO;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,WAAW,MAAM,yBAAyB;AAAC;AAAA;AAElD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAAEC,OAAO,CAAE,GAAGH,WAAW,EAAE;EACjC,MAAM,CAAEI,IAAI,EAAEC,OAAO,CAAE,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEQ;EAAM,CAAC,GAAGP,WAAW,CAAEQ,KAAqB,IAAK;IACrD,OAAO;MACHD,KAAK,EAAEC,KAAK,CAACC,IAAI,CAACF;IACtB,CAAC;EACL,CAAC,CAAC;EAEFL,WAAW,CAAC,MAAM;IACd,IAAIK,KAAK,KAAK,OAAO,EAAE;MACnBD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MAEjB,IAAIA,IAAI,KAAK,CAAC,EAAE;QACZ;QACAD,OAAO,CAAC,SAAS,CAAC;MACtB;IACJ;EACJ,CAAC,EAAE,IAAI,CAAC;EAER,oBACI;IAAA,wBACA;MAAU,SAAS,EAAC,cAAc;MAAC,KAAK,EAAEC,IAAK;MAAC,GAAG,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAAE,eAC1D;MAAA,UAAOA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA,gBAChB;AAEX,CAAC;AAAA,GA1BKF,WAAW;EAAA,QACOF,WAAW,EAEbD,WAAW,EAM7BE,WAAW;AAAA;AAAA,KATTC,WAAW;AA4BjB,kCAAeL,KAAK,CAACY,IAAI,CAACP,WAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}