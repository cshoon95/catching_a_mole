{"ast":null,"code":"import { movePage } from \"../store/View\";\nimport { setState } from \"../store/Data\";\nexport class Mole {\n  constructor() {\n    this._store = void 0;\n  }\n  /**\n   * Store 초기화.\n   * @param inStore Store\n   */\n  init(inStore) {\n    this._store = inStore;\n  }\n  get store() {\n    return this._store;\n  }\n  set store(inStore) {\n    this.store = inStore;\n  }\n  get state() {\n    return this.store.getState();\n  }\n\n  /**\n   * 스토어에 있는 상태 값 가져오기.\n   * @param key DataStateType | viewStateType 키\n   * @param type data | view\n   * @returns 키의 값\n   */\n  getState(key) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'data';\n    return this.store.getState()[type][key];\n  }\n  setState(key, value) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'data';\n    this.store.dispatch(setState({\n      [key]: value\n    }));\n  }\n\n  /**\n   * 페이지 이동하기\n   * @param path 이동할 페이지 코드\n   */\n  movePage(path) {\n    this.store.dispatch(movePage({\n      pageName: path\n    }));\n  }\n}\n\n// 개발자도구 디버깅 안걸고, 값 확인할 때를 위해 추가\nconst mole = window.devmole = new Mole();\nexport default mole;","map":{"version":3,"names":["movePage","setState","Mole","_store","init","inStore","store","state","getState","key","type","value","dispatch","path","pageName","mole","window","devmole"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Mole.ts"],"sourcesContent":["import { Store } from \"redux\";\nimport { initialDataState, initialViewState, StoreStateType } from './../type/Type';\nimport { movePage } from \"../store/View\";\nimport { setState } from \"../store/Data\";\n\ntype StateType = keyof typeof initialDataState | keyof typeof initialViewState;\n\nexport class Mole {\n    private _store!: Store;\n\n    /**\n     * Store 초기화.\n     * @param inStore Store\n     */\n    public init(inStore: Store) {\n        this._store = inStore;\n    }\n\n    public get store() {\n        return this._store;\n    }\n\n    public set store(inStore: Store) {\n        this.store = inStore;\n    }\n\n    public get state(): StoreStateType {\n        return this.store.getState()\n    }\n\n    /**\n     * 스토어에 있는 상태 값 가져오기.\n     * @param key DataStateType | viewStateType 키\n     * @param type data | view\n     * @returns 키의 값\n     */\n    public getState(key: StateType, type: string = 'data') {\n        return this.store.getState()[type][key];\n    }\n\n    public setState(key: StateType, value: any, type: string = 'data'): void {\n        this.store.dispatch(setState(\n            { [key]: value }\n        ));\n    }\n\n    /**\n     * 페이지 이동하기\n     * @param path 이동할 페이지 코드\n     */\n    public movePage(path: string) {\n        this.store.dispatch(movePage({\n            pageName: path\n        }))\n    }\n}\n\n// 개발자도구 디버깅 안걸고, 값 확인할 때를 위해 추가\nconst mole = (window as any).devmole = new Mole();\nexport default mole;"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,QAAQ,QAAQ,eAAe;AAIxC,OAAO,MAAMC,IAAI,CAAC;EAAA;IAAA,KACNC,MAAM;EAAA;EAEd;AACJ;AACA;AACA;EACWC,IAAI,CAACC,OAAc,EAAE;IACxB,IAAI,CAACF,MAAM,GAAGE,OAAO;EACzB;EAEA,IAAWC,KAAK,GAAG;IACf,OAAO,IAAI,CAACH,MAAM;EACtB;EAEA,IAAWG,KAAK,CAACD,OAAc,EAAE;IAC7B,IAAI,CAACC,KAAK,GAAGD,OAAO;EACxB;EAEA,IAAWE,KAAK,GAAmB;IAC/B,OAAO,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE;EAChC;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACWA,QAAQ,CAACC,GAAc,EAAyB;IAAA,IAAvBC,IAAY,uEAAG,MAAM;IACjD,OAAO,IAAI,CAACJ,KAAK,CAACE,QAAQ,EAAE,CAACE,IAAI,CAAC,CAACD,GAAG,CAAC;EAC3C;EAEOR,QAAQ,CAACQ,GAAc,EAAEE,KAAU,EAA+B;IAAA,IAA7BD,IAAY,uEAAG,MAAM;IAC7D,IAAI,CAACJ,KAAK,CAACM,QAAQ,CAACX,QAAQ,CACxB;MAAE,CAACQ,GAAG,GAAGE;IAAM,CAAC,CACnB,CAAC;EACN;;EAEA;AACJ;AACA;AACA;EACWX,QAAQ,CAACa,IAAY,EAAE;IAC1B,IAAI,CAACP,KAAK,CAACM,QAAQ,CAACZ,QAAQ,CAAC;MACzBc,QAAQ,EAAED;IACd,CAAC,CAAC,CAAC;EACP;AACJ;;AAEA;AACA,MAAME,IAAI,GAAIC,MAAM,CAASC,OAAO,GAAG,IAAIf,IAAI,EAAE;AACjD,eAAea,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}