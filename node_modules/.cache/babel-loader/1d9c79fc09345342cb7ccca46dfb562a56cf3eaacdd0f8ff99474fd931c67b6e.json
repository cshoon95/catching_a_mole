{"ast":null,"code":"import mole from \"./Mole\";\nlet score = 0;\nexport default class Module {\n  constructor() {\n    this.getRowXColumnsCount = () => {\n      const screenData = mole.getState('screenData');\n      return screenData.row * screenData.column;\n    };\n    this.getRandomHoles = () => {\n      const screenData = mole.getState('screenData');\n      const result = [];\n      for (let i = 0; i < screenData.count; i++) {\n        result.push(mole.utils.randomNum(this.getRowXColumnsCount()));\n      }\n      return result;\n    };\n    this.getHolesEl = () => {\n      const result = [];\n      for (let i = 0; i < this.getRandomHoles().length; i++) {\n        result.push(document.getElementById(`${this.getRandomHoles()[i]}`));\n      }\n      return result;\n    };\n    this.playingMole = () => {\n      const elList = this.getHolesEl();\n\n      // 두더지 등장\n      const showMole = () => {\n        const onClick = (e, element) => {\n          // hit 이미지로 수정\n          console.log('click', score);\n          e.target.src = '/images/mole_hit_hole.png';\n\n          // 다시 이미지 복구\n          setTimeout(() => {\n            e.target.src = '/images/mole.png';\n          }, 500);\n          score = score + 1;\n          this.catchMole(element);\n        };\n        elList.forEach(element => {\n          // 애니메이션 추가\n          mole.utils.addClassActive(element);\n\n          // 클릭 이벤트 추가 ({ once : true } 이벤트 한 번 만 실행)\n          element === null || element === void 0 ? void 0 : element.addEventListener('click', e => onClick(e, element), {\n            once: true\n          });\n        });\n        setTimeout(this.stoppingMole, 3000);\n      };\n      showMole();\n      setTimeout(this.playingMole, 3000);\n    };\n    this.catchMole = element => {\n      mole.utils.removeClassActive(element);\n    };\n    this.stoppingMole = () => {\n      console.log('hide');\n      for (let i = 0; i < this.getRowXColumnsCount(); i++) {\n        const element = document.getElementById(i.toString());\n        mole.utils.removeClassActive(element);\n      }\n      clearTimeout(setTimeout(this.playingMole));\n    };\n    this.getScore = () => {\n      return score;\n    };\n  }\n}","map":{"version":3,"names":["mole","score","Module","getRowXColumnsCount","screenData","getState","row","column","getRandomHoles","result","i","count","push","utils","randomNum","getHolesEl","length","document","getElementById","playingMole","elList","showMole","onClick","e","element","console","log","target","src","setTimeout","catchMole","forEach","addClassActive","addEventListener","once","stoppingMole","removeClassActive","toString","clearTimeout","getScore"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Module.ts"],"sourcesContent":["import mole from \"./Mole\";\n\nlet score = 0;\n\nexport default class Module {\n    /** 행x열의 값 */\n    getRowXColumnsCount = () => {\n        const screenData = mole.getState('screenData');\n        return screenData.row * screenData.column;\n    }\n\n    /** 두더지가 출현할 Elment Index */\n    getRandomHoles = () => {\n        const screenData = mole.getState('screenData');\n        const result = []\n\n        for (let i=0; i<screenData.count; i++) {\n            result.push(mole.utils.randomNum(this.getRowXColumnsCount()));\n        }\n\n        return result;\n    }\n\n    /** 출현한 두더지 Element List */ \n    getHolesEl = () => {\n        const result = [];\n\n        for (let i=0; i<this.getRandomHoles().length; i++) {\n            result.push(document.getElementById(`${this.getRandomHoles()[i]}`));\n        }\n\n        return result;\n    }\n\n    /** 두더지 show */ \n    playingMole = () => {\n        const elList = this.getHolesEl();\n\n        // 두더지 등장\n        const showMole = () => {\n            const onClick = (e: any, element: any) => {\n                // hit 이미지로 수정\n                console.log('click', score)\n                e.target.src = '/images/mole_hit_hole.png';\n        \n                // 다시 이미지 복구\n                setTimeout(() => {\n                    e.target.src = '/images/mole.png';\n                }, 500)\n        \n                score = score + 1;\n        \n                this.catchMole(element)\n            }\n\n            elList.forEach(element => {\n                // 애니메이션 추가\n                mole.utils.addClassActive(element);\n\n                // 클릭 이벤트 추가 ({ once : true } 이벤트 한 번 만 실행)\n                element?.addEventListener('click', (e) => onClick(e, element), { once : true });\n            });\n\n            setTimeout(this.stoppingMole, 3000);\n        }\n\n        showMole();\n        setTimeout(this.playingMole, 3000);\n    }\n\n    /** 두더지 잡은 경우 active 비활성화 */\n    catchMole = (element: Element) => {\n        mole.utils.removeClassActive(element);\n    }\n\n    /** 두더지 hide */ \n    stoppingMole = () => {\n        console.log('hide')\n        for (let i = 0; i<this.getRowXColumnsCount(); i++) {\n            const element = document.getElementById(i.toString());\n            mole.utils.removeClassActive(element);\n        }\n\n        clearTimeout(setTimeout(this.playingMole))\n    }\n\n    getScore = () => {\n        return score;\n    }\n}   \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}