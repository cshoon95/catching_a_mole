{"ast":null,"code":"import mole from \"./Mole\";\nlet score = 0;\nexport default class Module {\n  constructor() {\n    this.getRowXColumnsCount = () => {\n      const screenData = mole.getState('screenData');\n      return screenData.row * screenData.column;\n    };\n    this.getRandomHoles = () => {\n      const screenData = mole.getState('screenData');\n      const result = [];\n      for (let i = 0; i < screenData.count; i++) {\n        result.push(mole.utils.randomNum(this.getRowXColumnsCount()));\n      }\n      return result;\n    };\n    this.getHolesEl = () => {\n      const result = [];\n      for (let i = 0; i < this.getRandomHoles().length; i++) {\n        result.push(document.getElementById(`${this.getRandomHoles()[i]}`));\n      }\n      return result;\n    };\n    this.onClickMole = e => {\n      // hit 이미지로 수정\n      console.log('click', score);\n      e.target.src = '/images/mole_hit_hole.png';\n      setTimeout(() => {\n        // 다시 이미지 복구\n        e.target.src = '/images/mole.png';\n      }, 500);\n\n      // 두더지 처리\n      score = score + 1;\n    };\n    this.playingMole = () => {\n      const elList = this.getHolesEl();\n      console.log('elList', elList);\n      const onClick = (e, element) => {\n        // hit 이미지로 수정\n        console.log('click', score);\n        e.target.src = '/images/mole_hit_hole.png';\n\n        // 다시 이미지 복구\n        setTimeout(() => {\n          e.target.src = '/images/mole.png';\n        }, 500);\n        score = score + 1;\n        catchMole(element);\n      };\n\n      // 두더지 등장\n      const showMole = () => {\n        setTimeout(() => {\n          elList.forEach(element => {\n            // 애니메이션 추가\n            mole.utils.addClassActive(element);\n\n            // 클릭 이벤트 추가\n            element === null || element === void 0 ? void 0 : element.addEventListener('click', e => {\n              onClick(e, element);\n            });\n          });\n          setTimeout(this.stoppingMole, 3000);\n        }, 3000);\n      };\n\n      // 두더지 터치\n      const catchMole = element => {\n        mole.utils.removeClassActive(element);\n        console.log('element', element);\n        element === null || element === void 0 ? void 0 : element.removeEventListener('click', e => {\n          onClick(e, element);\n        });\n      };\n      showMole();\n      setTimeout(this.playingMole, 3000);\n    };\n    this.stoppingMole = () => {\n      console.log('hide');\n      for (let i = 0; i < this.getRowXColumnsCount(); i++) {\n        const element = document.getElementById(i.toString());\n        mole.utils.removeClassActive(element);\n        element === null || element === void 0 ? void 0 : element.removeEventListener('click', () => {});\n      }\n\n      // clearTimeout(setTimeout(this.stoppingMole));\n      // clearTimeout(setTimeout(this.playingMole));\n      // clearTimeout(setTimeout(this.playingMole))\n    };\n    this.getScore = () => {\n      return score;\n    };\n  }\n}","map":{"version":3,"names":["mole","score","Module","getRowXColumnsCount","screenData","getState","row","column","getRandomHoles","result","i","count","push","utils","randomNum","getHolesEl","length","document","getElementById","onClickMole","e","console","log","target","src","setTimeout","playingMole","elList","onClick","element","catchMole","showMole","forEach","addClassActive","addEventListener","stoppingMole","removeClassActive","removeEventListener","toString","getScore"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Module.ts"],"sourcesContent":["import mole from \"./Mole\";\n\nlet score = 0;\n\nexport default class Module {\n    /** 행x열의 값 */\n    getRowXColumnsCount = () => {\n        const screenData = mole.getState('screenData');\n        return screenData.row * screenData.column;\n    }\n\n    /** 두더지가 출현할 Elment Index */\n    getRandomHoles = () => {\n        const screenData = mole.getState('screenData');\n        const result = []\n\n        for (let i=0; i<screenData.count; i++) {\n            result.push(mole.utils.randomNum(this.getRowXColumnsCount()));\n        }\n\n        return result;\n    }\n\n    /** 출현한 두더지 Element List */ \n    getHolesEl = () => {\n        const result = [];\n\n        for (let i=0; i<this.getRandomHoles().length; i++) {\n            result.push(document.getElementById(`${this.getRandomHoles()[i]}`));\n        }\n\n        return result;\n    }\n\n    onClickMole = (e: any) => {\n        // hit 이미지로 수정\n        console.log('click', score)\n        e.target.src = '/images/mole_hit_hole.png';\n\n        setTimeout(() => {\n            // 다시 이미지 복구\n            e.target.src = '/images/mole.png';\n        }, 500)\n\n        // 두더지 처리\n        score = score + 1;\n    }\n    \n    /** 두더지 show */ \n    playingMole = () => {\n        const elList = this.getHolesEl();\n        console.log('elList', elList);\n\n        const onClick = (e: any, element: any) => {\n            // hit 이미지로 수정\n            console.log('click', score)\n            e.target.src = '/images/mole_hit_hole.png';\n\n            // 다시 이미지 복구\n            setTimeout(() => {\n                e.target.src = '/images/mole.png';\n            }, 500)\n\n            score = score + 1;\n\n            catchMole(element)\n        }\n\n        // 두더지 등장\n        const showMole = () => {\n            setTimeout(() => {\n                elList.forEach(element => {\n                    // 애니메이션 추가\n                    mole.utils.addClassActive(element);\n    \n                    // 클릭 이벤트 추가\n                    element?.addEventListener('click', (e) => {\n                        onClick(e, element)\n                    });\n                });\n    \n                setTimeout(this.stoppingMole, 3000);\n            }, (3000));\n            \n        }\n\n        // 두더지 터치\n        const catchMole = (element: Element) => {\n            mole.utils.removeClassActive(element);\n            console.log('element', element);\n            \n            element?.removeEventListener('click', (e) => {\n                onClick(e, element)\n            });\n        }\n\n        showMole();\n        setTimeout(this.playingMole, 3000);\n    }\n\n    /** 두더지 hide */ \n    stoppingMole = () => {\n        console.log('hide')\n        for (let i = 0; i<this.getRowXColumnsCount(); i++) {\n            const element = document.getElementById(i.toString());\n\n            mole.utils.removeClassActive(element);\n            element?.removeEventListener('click', () => {});\n        }\n\n        // clearTimeout(setTimeout(this.stoppingMole));\n        // clearTimeout(setTimeout(this.playingMole));\n        // clearTimeout(setTimeout(this.playingMole))\n    }\n\n    getScore = () => {\n        return score;\n    }\n}   \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}