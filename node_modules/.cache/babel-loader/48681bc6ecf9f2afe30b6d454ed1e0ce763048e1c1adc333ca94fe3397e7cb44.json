{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx\",\n  _s = $RefreshSig$();\nimport ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [setPage] = useMovePage();\n  const {\n    screenData,\n    timer,\n    score\n  } = useSelector(state => {\n    return {\n      screenData: state.data.screenData,\n      timer: state.data.timer,\n      score: state.data.score\n    };\n  });\n  let totalScore = 0;\n  const Table = () => {\n    let i = -1;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mole-list clearfix\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mole.utils.createArray(screenData.column).map((columnHeight, columnIdx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: mole.utils.createArray(screenData.row).map((row, rowIdx) => {\n              i = i + 1;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mole\",\n                style: {\n                  height: `${columnHeight}px`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\\uB450\\uB354\\uC9C0 \\uC774\\uBBF8\\uC9C0\",\n                  id: i.toString(),\n                  src: \"images/mole.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 45\n                }, this)\n              }, columnIdx + '-' + rowIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this);\n            })\n          }, columnIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n  const BtnGroup = () => {\n    var _list$info;\n    const list = mole.list.timerBtnList.find(e => e.value === timer);\n    const getRandomHoles = () => {\n      const result = [];\n      for (let i = 0; i < screenData.count; i++) {\n        result.push(mole.utils.randomNum(screenData.row * screenData.column));\n      }\n      return result;\n    };\n    const getHolesID = () => {\n      const result = [];\n      for (let i = 0; i < getRandomHoles().length; i++) {\n        result.push(document.getElementById(`${getRandomHoles()[i]}`));\n      }\n      return result;\n    };\n    const playingMole = () => {\n      const data = getHolesID();\n      // 두더지 등장\n      const showMole = callback => {\n        data.forEach(element => {\n          // 애니메이션 추가\n          mole.utils.addClassActive(element);\n          // 클릭 이벤트 추가\n          element === null || element === void 0 ? void 0 : element.addEventListener('click', () => {\n            totalScore += 1;\n            catchMole(element && element);\n          });\n        });\n        setTimeout(overTimeMole, 2000);\n      };\n\n      // 두더지 터치\n      const catchMole = element => {\n        mole.utils.removeClassActive(element);\n        element === null || element === void 0 ? void 0 : element.removeEventListener('click', () => {});\n        clearTimeout(setTimeout(playingMole, 2000));\n      };\n\n      // 시간 초과\n      const overTimeMole = () => {\n        data.forEach(element => {\n          catchMole(element);\n        });\n        clearTimeout(setTimeout(playingMole, 2000));\n\n        // test중\n        // 게임 모드에 따라 구분\n      };\n\n      showMole();\n      setTimeout(playingMole, 2000);\n    };\n\n    // 버튼 클릭 이벤트 핸들러\n    const btnClickHandler = info => {\n      mole.setState('timer', info.nextCode);\n      if (!['pause', 'stop'].includes(info.nextCode)) {\n        playingMole();\n      } else if (['start', 'pause'].includes(info.nextCode)) {\n        clearTimeout(setTimeout(playingMole, 1000));\n      }\n\n      // 그만하기인 경우 준비화면으로 이동\n      if (info.nextCode === 'stop') setPage('/');\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-wrap\",\n      children: list === null || list === void 0 ? void 0 : (_list$info = list.info) === null || _list$info === void 0 ? void 0 : _list$info.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"game-btn\",\n          onClick: () => btnClickHandler(item),\n          children: item.label\n        }, item + '-' + idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  };\n  const Score = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-text\",\n          children: \"Score :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"count-score\",\n          children: `${tt}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Score, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BtnGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"9KowdD4n8TIR1S0dszC1jXIIiog=\", false, function () {\n  return [useMovePage, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["ProgressBar","useSelector","useMovePage","mole","Game","setPage","screenData","timer","score","state","data","totalScore","Table","i","utils","createArray","column","map","columnHeight","columnIdx","row","rowIdx","height","toString","BtnGroup","list","timerBtnList","find","e","value","getRandomHoles","result","count","push","randomNum","getHolesID","length","document","getElementById","playingMole","showMole","callback","forEach","element","addClassActive","addEventListener","catchMole","setTimeout","overTimeMole","removeClassActive","removeEventListener","clearTimeout","btnClickHandler","info","setState","nextCode","includes","item","idx","label","Score","tt"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx"],"sourcesContent":["import ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../type/Type';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\ninterface listInfoType {\n    label: string, \n    nextCode: string\n}\n\nconst Game = () => {\n    const [ setPage ] = useMovePage();\n    const { screenData, timer, score } = useSelector((state: StoreStateType) => {\n        return {\n            screenData: state.data.screenData,\n            timer: state.data.timer,\n            score: state.data.score\n        }\n    });\n\n    let totalScore = 0;\n    const Table = () => {\n        let i = -1;\n        return (\n            <table className=\"mole-list clearfix\" >\n                <tbody>\n                    {mole.utils.createArray(screenData.column).map((columnHeight: number, columnIdx: number) => {\n                        return (\n                            <tr key={columnIdx}>\n                                {mole.utils.createArray(screenData.row).map((row: number, rowIdx: number) => {\n                                    i = i + 1;\n                                    return (\n                                        <td className=\"mole\" \n                                            key={columnIdx + '-' + rowIdx} \n                                            style={{height: `${columnHeight}px`}}\n                                        >\n                                            <img alt=\"두더지 이미지\" \n                                                id={i.toString()}\n                                                src=\"images/mole.png\"\n                                                />\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        )\n    }\n\n    const BtnGroup = () => {\n        const list = mole.list.timerBtnList.find(e => e.value === timer);\n        \n        const getRandomHoles = () => {\n            const result = []\n\n            for (let i = 0; i<screenData.count; i++) {\n                result.push(mole.utils.randomNum(screenData.row * screenData.column));\n            }\n\n            return result;\n        }\n        \n        const getHolesID = () => {\n            const result = [];\n\n            for (let i=0; i<getRandomHoles().length; i++) {\n                result.push(document.getElementById(`${getRandomHoles()[i]}`));\n            }\n\n            return result;\n        }\n\n        const playingMole = () => {\n            const data = getHolesID();\n            // 두더지 등장\n            const showMole = (callback?: Function) => {\n                data.forEach(element => {\n                    // 애니메이션 추가\n                    mole.utils.addClassActive(element);\n                    // 클릭 이벤트 추가\n                    element?.addEventListener('click', () => {\n                        totalScore += 1;\n                        catchMole(element && element)\n                    });\n                });\n\n                setTimeout(overTimeMole, 2000);\n            }\n\n            // 두더지 터치\n            const catchMole = (element: Element) => {\n                mole.utils.removeClassActive(element);\n                element?.removeEventListener('click', () => {});\n                \n                clearTimeout(setTimeout(playingMole, 2000));\n            }\n\n            // 시간 초과\n            const overTimeMole =() => {\n\n                data.forEach((element: any) => {\n                    catchMole(element)\n                })\n                \n                clearTimeout(setTimeout(playingMole, 2000)); \n    \n                // test중\n                // 게임 모드에 따라 구분\n            }\n            \n            showMole();\n            setTimeout(playingMole, 2000);\n        }\n\n        // 버튼 클릭 이벤트 핸들러\n        const btnClickHandler = (info: listInfoType) => {\n            mole.setState('timer', info.nextCode);\n\n            if (!['pause', 'stop'].includes(info.nextCode)) {\n                playingMole()\n            } else if (['start','pause'].includes(info.nextCode)) {\n                clearTimeout(setTimeout(playingMole, 1000));\n            }\n\n            // 그만하기인 경우 준비화면으로 이동\n            if (info.nextCode === 'stop') setPage('/'); \n        }\n        \n        return (\n            <div className=\"btn-wrap\">\n                {list?.info?.map((item: listInfoType, idx: number) => {\n                    return (\n                        <button type=\"button\" \n                                className=\"game-btn\"\n                                key={item + '-' + idx}\n                                onClick={() => (btnClickHandler(item))}\n                        >{item.label}</button>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    const Score = () => {\n        return (\n            <div className=\"score-box\">\n                <div className=\"score-wrap\">\n                    <p className=\"score-text\">Score :</p>\n                    <p className=\"count-score\">{`${tt}`}</p>\n                </div>\n            </div>\n        )\n    }\n    \n    return (\n        <div className=\"main\">\n            <Score/>\n            <Table/>\n            <BtnGroup/>\n            <ProgressBar />\n        </div>\n    )\n}\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,IAAI,MAAM,gBAAgB;AAAC;AAMlC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAAEC,OAAO,CAAE,GAAGH,WAAW,EAAE;EACjC,MAAM;IAAEI,UAAU;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGP,WAAW,CAAEQ,KAAqB,IAAK;IACxE,OAAO;MACHH,UAAU,EAAEG,KAAK,CAACC,IAAI,CAACJ,UAAU;MACjCC,KAAK,EAAEE,KAAK,CAACC,IAAI,CAACH,KAAK;MACvBC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAACF;IACtB,CAAC;EACL,CAAC,CAAC;EAEF,IAAIG,UAAU,GAAG,CAAC;EAClB,MAAMC,KAAK,GAAG,MAAM;IAChB,IAAIC,CAAC,GAAG,CAAC,CAAC;IACV,oBACI;MAAO,SAAS,EAAC,oBAAoB;MAAA,uBACjC;QAAA,UACKV,IAAI,CAACW,KAAK,CAACC,WAAW,CAACT,UAAU,CAACU,MAAM,CAAC,CAACC,GAAG,CAAC,CAACC,YAAoB,EAAEC,SAAiB,KAAK;UACxF,oBACI;YAAA,UACKhB,IAAI,CAACW,KAAK,CAACC,WAAW,CAACT,UAAU,CAACc,GAAG,CAAC,CAACH,GAAG,CAAC,CAACG,GAAW,EAAEC,MAAc,KAAK;cACzER,CAAC,GAAGA,CAAC,GAAG,CAAC;cACT,oBACI;gBAAI,SAAS,EAAC,MAAM;gBAEhB,KAAK,EAAE;kBAACS,MAAM,EAAG,GAAEJ,YAAa;gBAAG,CAAE;gBAAA,uBAErC;kBAAK,GAAG,EAAC,uCAAS;kBACd,EAAE,EAAEL,CAAC,CAACU,QAAQ,EAAG;kBACjB,GAAG,EAAC;gBAAiB;kBAAA;kBAAA;kBAAA;gBAAA;cACnB,GANDJ,SAAS,GAAG,GAAG,GAAGE,MAAM;gBAAA;gBAAA;gBAAA;cAAA,QAO5B;YAEb,CAAC;UAAC,GAdGF,SAAS;YAAA;YAAA;YAAA;UAAA,QAeb;QAEb,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACJ;EAEhB,CAAC;EAED,MAAMK,QAAQ,GAAG,MAAM;IAAA;IACnB,MAAMC,IAAI,GAAGtB,IAAI,CAACsB,IAAI,CAACC,YAAY,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKtB,KAAK,CAAC;IAEhE,MAAMuB,cAAc,GAAG,MAAM;MACzB,MAAMC,MAAM,GAAG,EAAE;MAEjB,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACP,UAAU,CAAC0B,KAAK,EAAEnB,CAAC,EAAE,EAAE;QACrCkB,MAAM,CAACE,IAAI,CAAC9B,IAAI,CAACW,KAAK,CAACoB,SAAS,CAAC5B,UAAU,CAACc,GAAG,GAAGd,UAAU,CAACU,MAAM,CAAC,CAAC;MACzE;MAEA,OAAOe,MAAM;IACjB,CAAC;IAED,MAAMI,UAAU,GAAG,MAAM;MACrB,MAAMJ,MAAM,GAAG,EAAE;MAEjB,KAAK,IAAIlB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACiB,cAAc,EAAE,CAACM,MAAM,EAAEvB,CAAC,EAAE,EAAE;QAC1CkB,MAAM,CAACE,IAAI,CAACI,QAAQ,CAACC,cAAc,CAAE,GAAER,cAAc,EAAE,CAACjB,CAAC,CAAE,EAAC,CAAC,CAAC;MAClE;MAEA,OAAOkB,MAAM;IACjB,CAAC;IAED,MAAMQ,WAAW,GAAG,MAAM;MACtB,MAAM7B,IAAI,GAAGyB,UAAU,EAAE;MACzB;MACA,MAAMK,QAAQ,GAAIC,QAAmB,IAAK;QACtC/B,IAAI,CAACgC,OAAO,CAACC,OAAO,IAAI;UACpB;UACAxC,IAAI,CAACW,KAAK,CAAC8B,cAAc,CAACD,OAAO,CAAC;UAClC;UACAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,gBAAgB,CAAC,OAAO,EAAE,MAAM;YACrClC,UAAU,IAAI,CAAC;YACfmC,SAAS,CAACH,OAAO,IAAIA,OAAO,CAAC;UACjC,CAAC,CAAC;QACN,CAAC,CAAC;QAEFI,UAAU,CAACC,YAAY,EAAE,IAAI,CAAC;MAClC,CAAC;;MAED;MACA,MAAMF,SAAS,GAAIH,OAAgB,IAAK;QACpCxC,IAAI,CAACW,KAAK,CAACmC,iBAAiB,CAACN,OAAO,CAAC;QACrCA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;QAE/CC,YAAY,CAACJ,UAAU,CAACR,WAAW,EAAE,IAAI,CAAC,CAAC;MAC/C,CAAC;;MAED;MACA,MAAMS,YAAY,GAAE,MAAM;QAEtBtC,IAAI,CAACgC,OAAO,CAAEC,OAAY,IAAK;UAC3BG,SAAS,CAACH,OAAO,CAAC;QACtB,CAAC,CAAC;QAEFQ,YAAY,CAACJ,UAAU,CAACR,WAAW,EAAE,IAAI,CAAC,CAAC;;QAE3C;QACA;MACJ,CAAC;;MAEDC,QAAQ,EAAE;MACVO,UAAU,CAACR,WAAW,EAAE,IAAI,CAAC;IACjC,CAAC;;IAED;IACA,MAAMa,eAAe,GAAIC,IAAkB,IAAK;MAC5ClD,IAAI,CAACmD,QAAQ,CAAC,OAAO,EAAED,IAAI,CAACE,QAAQ,CAAC;MAErC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACH,IAAI,CAACE,QAAQ,CAAC,EAAE;QAC5ChB,WAAW,EAAE;MACjB,CAAC,MAAM,IAAI,CAAC,OAAO,EAAC,OAAO,CAAC,CAACiB,QAAQ,CAACH,IAAI,CAACE,QAAQ,CAAC,EAAE;QAClDJ,YAAY,CAACJ,UAAU,CAACR,WAAW,EAAE,IAAI,CAAC,CAAC;MAC/C;;MAEA;MACA,IAAIc,IAAI,CAACE,QAAQ,KAAK,MAAM,EAAElD,OAAO,CAAC,GAAG,CAAC;IAC9C,CAAC;IAED,oBACI;MAAK,SAAS,EAAC,UAAU;MAAA,UACpBoB,IAAI,aAAJA,IAAI,qCAAJA,IAAI,CAAE4B,IAAI,+CAAV,WAAYpC,GAAG,CAAC,CAACwC,IAAkB,EAAEC,GAAW,KAAK;QAClD,oBACI;UAAQ,IAAI,EAAC,QAAQ;UACb,SAAS,EAAC,UAAU;UAEpB,OAAO,EAAE,MAAON,eAAe,CAACK,IAAI,CAAG;UAAA,UAC7CA,IAAI,CAACE;QAAK,GAFCF,IAAI,GAAG,GAAG,GAAGC,GAAG;UAAA;UAAA;UAAA;QAAA,QAEP;MAE9B,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAEd,CAAC;EAED,MAAME,KAAK,GAAG,MAAM;IAChB,oBACI;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAG,SAAS,EAAC,YAAY;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI,eACrC;UAAG,SAAS,EAAC,aAAa;UAAA,UAAG,GAAEC,EAAG;QAAC;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IACtC;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACR,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACR,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eACX,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEd,CAAC;AAAA,GA1JKzD,IAAI;EAAA,QACcF,WAAW,EACMD,WAAW;AAAA;AAAA,KAF9CG,IAAI;AA4JV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}