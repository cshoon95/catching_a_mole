{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx\",\n  _s = $RefreshSig$();\nimport ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [setPage] = useMovePage();\n  const {\n    screenData,\n    score,\n    timer\n  } = useSelector(state => {\n    return {\n      screenData: state.data.screenData,\n      score: state.data.score,\n      timer: state.data.timer\n    };\n  });\n  const BtnGroup = () => {\n    var _mole$list$timerBtnLi;\n    const list = (_mole$list$timerBtnLi = mole.list.timerBtnList.find(e => e.value === timer)) === null || _mole$list$timerBtnLi === void 0 ? void 0 : _mole$list$timerBtnLi.info;\n    const btnClickHandler = item => {\n      mole.setState('timer', item.nextCode);\n      // 그만하기인 경우 준비화면으로 이동\n      if (item.nextCode === 'stop') setPage('/');\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: list === null || list === void 0 ? void 0 : list.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: item.prevCode,\n          onClick: () => {\n            btnClickHandler(item);\n          },\n          children: item.label\n        }, item + '-', false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), `${score}점`, /*#__PURE__*/_jsxDEV(BtnGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"e0rE+X3FKvbu+GMRcgIdAwKI7Q4=\", false, function () {\n  return [useMovePage, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["ProgressBar","useSelector","useMovePage","mole","Game","setPage","screenData","score","timer","state","data","BtnGroup","list","timerBtnList","find","e","value","info","btnClickHandler","item","setState","nextCode","map","prevCode","label"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../type/Type';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\n\ninterface listInfoType {\n    label: string, \n    prevCode: string, \n    nextCode: string\n}\n\nconst Game = () => {\n    const [ setPage ] = useMovePage();\n    const { screenData, score, timer } = useSelector((state: StoreStateType) => {\n        return {\n            screenData: state.data.screenData,\n            score: state.data.score,\n            timer: state.data.timer \n        }\n    });\n\n    const BtnGroup = () => {\n        const list = mole.list.timerBtnList.find(e => e.value === timer)?.info;\n        \n        const btnClickHandler = (item: listInfoType) => {\n            mole.setState('timer', item.nextCode);\n            // 그만하기인 경우 준비화면으로 이동\n            if (item.nextCode === 'stop') setPage('/')\n        }\n        return (\n            <>\n                {list?.map((item: {\n                    label: string, \n                    prevCode: string, \n                    nextCode: string\n                }) => {\n                    return <button type=\"button\" \n                                    key={item + '-'}\n                                    name={item.prevCode}\n                                    onClick={() => {btnClickHandler(item)}}\n                            >{item.label}</button>\n                })}\n            </>\n        )\n    }\n\n    return (\n        <>\n        <ProgressBar />\n        {`${score}점`}\n        <BtnGroup/>\n        </>\n    )\n}\n\nexport default Game;"],"mappings":";;AACA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,IAAI,MAAM,gBAAgB;AAAC;AAAA;AAQlC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAAEC,OAAO,CAAE,GAAGH,WAAW,EAAE;EACjC,MAAM;IAAEI,UAAU;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGP,WAAW,CAAEQ,KAAqB,IAAK;IACxE,OAAO;MACHH,UAAU,EAAEG,KAAK,CAACC,IAAI,CAACJ,UAAU;MACjCC,KAAK,EAAEE,KAAK,CAACC,IAAI,CAACH,KAAK;MACvBC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAACF;IACtB,CAAC;EACL,CAAC,CAAC;EAEF,MAAMG,QAAQ,GAAG,MAAM;IAAA;IACnB,MAAMC,IAAI,4BAAGT,IAAI,CAACS,IAAI,CAACC,YAAY,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKR,KAAK,CAAC,0DAAnD,sBAAqDS,IAAI;IAEtE,MAAMC,eAAe,GAAIC,IAAkB,IAAK;MAC5ChB,IAAI,CAACiB,QAAQ,CAAC,OAAO,EAAED,IAAI,CAACE,QAAQ,CAAC;MACrC;MACA,IAAIF,IAAI,CAACE,QAAQ,KAAK,MAAM,EAAEhB,OAAO,CAAC,GAAG,CAAC;IAC9C,CAAC;IACD,oBACI;MAAA,UACKO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,GAAG,CAAEH,IAIX,IAAK;QACF,oBAAO;UAAQ,IAAI,EAAC,QAAQ;UAEZ,IAAI,EAAEA,IAAI,CAACI,QAAS;UACpB,OAAO,EAAE,MAAM;YAACL,eAAe,CAACC,IAAI,CAAC;UAAA,CAAE;UAAA,UAC7CA,IAAI,CAACK;QAAK,GAHCL,IAAI,GAAG,GAAG;UAAA;UAAA;UAAA;QAAA,QAGD;MAClC,CAAC;IAAC,iBACH;EAEX,CAAC;EAED,oBACI;IAAA,wBACA,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,EACb,GAAEZ,KAAM,GAAE,eACZ,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBACR;AAEX,CAAC;AAAA,GA1CKH,IAAI;EAAA,QACcF,WAAW,EACMD,WAAW;AAAA;AAAA,KAF9CG,IAAI;AA4CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}