{"ast":null,"code":"import { movePage, showAlert, hideAlert, showModal, hideModal } from \"../store/View\";\nimport { setState } from \"../store/Data\";\nimport List from \"./List\";\nimport Utils from \"./Utils\";\nimport Module from \"./Module\";\nexport class Mole {\n  constructor() {\n    this._store = void 0;\n  }\n  /**\n   * Store 초기화.\n   * @param inStore Store\n   */\n  init(inStore) {\n    this._store = inStore;\n  }\n  get store() {\n    return this._store;\n  }\n  set store(inStore) {\n    this.store = inStore;\n  }\n  get state() {\n    return this.store.getState();\n  }\n  get list() {\n    return new List();\n  }\n  get utils() {\n    return new Utils();\n  }\n  get Module() {\n    return new Module();\n  }\n  /**\n   * 얼럿 모달.\n   * @param message 메시지\n   * @param option 옵션\n   */\n  alert(message, option) {\n    message === 'hide' ? this._store.dispatch(hideAlert()) : this._store.dispatch(showAlert({\n      message,\n      alertOption: option\n    }));\n  }\n\n  /**\n   * 카운트다운.\n   * @param isShow 노출 여부 \n   */\n  showModal(name, option) {\n    this._store.dispatch(showModal({\n      modalName: name,\n      modalOption: option\n    }));\n    if (option) console.log(name + '의 옵션 값: ', option);\n  }\n  hideModal() {\n    this._store.dispatch(hideModal());\n  }\n\n  /**\n   * 스토어에 있는 상태 값 가져오기.\n   * @param key DataStateType | viewStateType 키\n   * @param type data | view\n   * @returns 키의 값\n   */\n  getState(key) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'data';\n    return this.store.getState()[type][key];\n  }\n\n  /**\n   * 스토어에 있는 Data 상태 값 변경.\n   * @param key StateType 데이터에 등록되어있는 타입\n   * @param value 바꿀 값\n   */\n  setState(key, value) {\n    this.store.dispatch(setState({\n      [key]: value\n    }));\n  }\n\n  /**\n   * 페이지 이동하기.\n   * @param path 이동할 페이지\n   */\n  movePage(path) {\n    this.store.dispatch(movePage({\n      pageName: path\n    }));\n  }\n}\n\n// 개발자도구 디버깅 안걸고, 값 확인할 때를 위해 추가\nconst mole = window.devmole = new Mole();\nexport default mole;","map":{"version":3,"names":["movePage","showAlert","hideAlert","showModal","hideModal","setState","List","Utils","Module","Mole","_store","init","inStore","store","state","getState","list","utils","alert","message","option","dispatch","alertOption","name","modalName","modalOption","console","log","key","type","value","path","pageName","mole","window","devmole"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Mole.ts"],"sourcesContent":["import { Store } from \"redux\";\nimport { initialDataState, initialViewState, StoreStateType, AlertOptionType, ModalOptionType } from './../type/Type';\nimport { movePage, showAlert, hideAlert, showModal, hideModal } from \"../store/View\";\nimport { setState } from \"../store/Data\";\nimport List from \"./List\";\nimport Utils from \"./Utils\";\nimport Module from \"./Module\";\n\ntype StateType = keyof typeof initialDataState | keyof typeof initialViewState;\n\nexport class Mole {\n    private _store!: Store;\n\n    /**\n     * Store 초기화.\n     * @param inStore Store\n     */\n    public init(inStore: Store) {\n        this._store = inStore;\n    }\n\n    public get store() {\n        return this._store;\n    }\n\n    public set store(inStore: Store) {\n        this.store = inStore;\n    }\n\n    public get state(): StoreStateType {\n        return this.store.getState()\n    }\n    \n    public get list() {\n        return new List();\n    }\n\n    public get utils() {\n        return new Utils();\n    }\n    \n    public get Module() {\n        return new Module();\n    }\n    /**\n     * 얼럿 모달.\n     * @param message 메시지\n     * @param option 옵션\n     */\n    public alert(message: string, option?: AlertOptionType) {\n        (message === 'hide') ? this._store.dispatch(hideAlert()) : this._store.dispatch(showAlert({ message, alertOption: option }))\n    }\n\n    /**\n     * 카운트다운.\n     * @param isShow 노출 여부 \n     */\n    public showModal(name: string, option?: ModalOptionType) {\n        this._store.dispatch(showModal({\n            modalName: name,\n            modalOption: option\n        }))\n\n        if (option) console.log(name + '의 옵션 값: ', option);\n    }\n\n    public hideModal() {\n        this._store.dispatch(hideModal())\n    }\n\n    /**\n     * 스토어에 있는 상태 값 가져오기.\n     * @param key DataStateType | viewStateType 키\n     * @param type data | view\n     * @returns 키의 값\n     */\n    public getState(key: StateType, type: string = 'data') {\n        return this.store.getState()[type][key];\n    }\n\n    /**\n     * 스토어에 있는 Data 상태 값 변경.\n     * @param key StateType 데이터에 등록되어있는 타입\n     * @param value 바꿀 값\n     */\n    public setState(key: StateType, value: any): void {\n        this.store.dispatch(setState(\n            { [key]: value }\n        ));\n    }\n\n    /**\n     * 페이지 이동하기.\n     * @param path 이동할 페이지\n     */\n    public movePage(path: string) {\n        this.store.dispatch(movePage({\n            pageName: path\n        }))\n    }\n\n\n    \n}\n\n// 개발자도구 디버깅 안걸고, 값 확인할 때를 위해 추가\nconst mole = (window as any).devmole = new Mole();\nexport default mole;"],"mappings":"AAEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,QAAQ,eAAe;AACpF,SAASC,QAAQ,QAAQ,eAAe;AACxC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAI7B,OAAO,MAAMC,IAAI,CAAC;EAAA;IAAA,KACNC,MAAM;EAAA;EAEd;AACJ;AACA;AACA;EACWC,IAAI,CAACC,OAAc,EAAE;IACxB,IAAI,CAACF,MAAM,GAAGE,OAAO;EACzB;EAEA,IAAWC,KAAK,GAAG;IACf,OAAO,IAAI,CAACH,MAAM;EACtB;EAEA,IAAWG,KAAK,CAACD,OAAc,EAAE;IAC7B,IAAI,CAACC,KAAK,GAAGD,OAAO;EACxB;EAEA,IAAWE,KAAK,GAAmB;IAC/B,OAAO,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE;EAChC;EAEA,IAAWC,IAAI,GAAG;IACd,OAAO,IAAIV,IAAI,EAAE;EACrB;EAEA,IAAWW,KAAK,GAAG;IACf,OAAO,IAAIV,KAAK,EAAE;EACtB;EAEA,IAAWC,MAAM,GAAG;IAChB,OAAO,IAAIA,MAAM,EAAE;EACvB;EACA;AACJ;AACA;AACA;AACA;EACWU,KAAK,CAACC,OAAe,EAAEC,MAAwB,EAAE;IACnDD,OAAO,KAAK,MAAM,GAAI,IAAI,CAACT,MAAM,CAACW,QAAQ,CAACnB,SAAS,EAAE,CAAC,GAAG,IAAI,CAACQ,MAAM,CAACW,QAAQ,CAACpB,SAAS,CAAC;MAAEkB,OAAO;MAAEG,WAAW,EAAEF;IAAO,CAAC,CAAC,CAAC;EAChI;;EAEA;AACJ;AACA;AACA;EACWjB,SAAS,CAACoB,IAAY,EAAEH,MAAwB,EAAE;IACrD,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAClB,SAAS,CAAC;MAC3BqB,SAAS,EAAED,IAAI;MACfE,WAAW,EAAEL;IACjB,CAAC,CAAC,CAAC;IAEH,IAAIA,MAAM,EAAEM,OAAO,CAACC,GAAG,CAACJ,IAAI,GAAG,UAAU,EAAEH,MAAM,CAAC;EACtD;EAEOhB,SAAS,GAAG;IACf,IAAI,CAACM,MAAM,CAACW,QAAQ,CAACjB,SAAS,EAAE,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACWW,QAAQ,CAACa,GAAc,EAAyB;IAAA,IAAvBC,IAAY,uEAAG,MAAM;IACjD,OAAO,IAAI,CAAChB,KAAK,CAACE,QAAQ,EAAE,CAACc,IAAI,CAAC,CAACD,GAAG,CAAC;EAC3C;;EAEA;AACJ;AACA;AACA;AACA;EACWvB,QAAQ,CAACuB,GAAc,EAAEE,KAAU,EAAQ;IAC9C,IAAI,CAACjB,KAAK,CAACQ,QAAQ,CAAChB,QAAQ,CACxB;MAAE,CAACuB,GAAG,GAAGE;IAAM,CAAC,CACnB,CAAC;EACN;;EAEA;AACJ;AACA;AACA;EACW9B,QAAQ,CAAC+B,IAAY,EAAE;IAC1B,IAAI,CAAClB,KAAK,CAACQ,QAAQ,CAACrB,QAAQ,CAAC;MACzBgC,QAAQ,EAAED;IACd,CAAC,CAAC,CAAC;EACP;AAIJ;;AAEA;AACA,MAAME,IAAI,GAAIC,MAAM,CAASC,OAAO,GAAG,IAAI1B,IAAI,EAAE;AACjD,eAAewB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}