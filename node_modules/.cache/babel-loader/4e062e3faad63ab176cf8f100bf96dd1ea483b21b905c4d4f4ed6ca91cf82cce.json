{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/manager/Modal.tsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport ModalCountDown from \"../modal/ModalCountDown\";\nimport ModalResult from \"../modal/ModalResult\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport mole from \"../core/Mole\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = () => {\n  _s();\n  const refBtn = useRef(null);\n  const {\n    modalName,\n    modalOption,\n    isShowModal\n  } = useSelector(state => {\n    return {\n      modalName: state.view.modalName,\n      modalOption: state.view.modalOption,\n      isShowModal: state.view.isShowModal\n    };\n  });\n  const loadPopup = () => {\n    switch (modalName) {\n      case 'ModalCountDown':\n        return /*#__PURE__*/_jsxDEV(ModalCountDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 44\n        }, this);\n      case 'ModalResult':\n        return /*#__PURE__*/_jsxDEV(ModalResult, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 44\n        }, this);\n      default:\n        return;\n    }\n  };\n  useEffect(() => {\n    const focus = setTimeout(() => {\n      var _refBtn$current;\n      (_refBtn$current = refBtn.current) === null || _refBtn$current === void 0 ? void 0 : _refBtn$current.focus();\n    }, 100);\n    return () => {\n      clearInterval(focus);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShowModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [loadPopup(), (modalOption === null || modalOption === void 0 ? void 0 : modalOption.confirm) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => mole.hideModal(),\n          ref: refBtn,\n          children: modalOption === null || modalOption === void 0 ? void 0 : modalOption.confirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false)\n\n  // <div>\n  //     <Background visible={isShowModal} />\n  //     <ModalSection visible={isShowModal}>\n  //         <Content>{loadPopup()}</Content>\n  //         {modalOption?.confirm &&<button onClick={() => (mole.hideModal())}>{modalOption?.confirm}</button>}\n  //     </ModalSection>\n  // </div>\n  ;\n};\n\n// animations\n_s(Modal, \"kqKi4XvtoPU2HjdoXZciza3Iric=\", false, function () {\n  return [useSelector];\n});\n_c = Modal;\nconst fadeIn = keyframes`\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\nconst fadeOut = keyframes`\n    0% {\n        opacity: 1;\n    }\n    100% {\n        opacity: 0;\n    }\n`;\n\n// components\nconst modalSettings = visible => css`\n    visibility: ${visible ? 'visible' : 'hidden'};\n    z-index: 15;\n    animation: ${visible ? fadeIn : fadeOut} 0.15s ease-out;\n    transition: visibility 0.15s ease-out;\n`;\nconst Background = styled.div`\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    position: fixed;\n    background-color: rgba(0, 0, 0, 0.6);\n    ${props => modalSettings(props.visible)}\n`;\nconst ModalSection = styled.div`\n    width: 50%;\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    ${props => modalSettings(props.visible)}\n`;\nconst Title = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    padding: 0 16px;\n`;\nconst Content = styled.div`\n    padding: 16px 0;\n\n`;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useSelector","ModalCountDown","ModalResult","styled","keyframes","css","mole","useEffect","useRef","Modal","refBtn","modalName","modalOption","isShowModal","state","view","loadPopup","focus","setTimeout","current","clearInterval","confirm","hideModal","fadeIn","fadeOut","modalSettings","visible","Background","div","props","ModalSection","Title","Content"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/manager/Modal.tsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { StoreStateType } from '../type/Type';\nimport ModalCountDown from \"../modal/ModalCountDown\";\nimport ModalResult from \"../modal/ModalResult\";\nimport styled, { keyframes, css} from \"styled-components\";\nimport mole from \"../core/Mole\";\nimport { useEffect, useRef } from \"react\";\n\nconst Modal = () => {\n    const refBtn = useRef<HTMLButtonElement>(null);\n    const { modalName, modalOption, isShowModal } = useSelector((state: StoreStateType) => {\n        return {\n            modalName: state.view.modalName,\n            modalOption: state.view.modalOption,\n            isShowModal: state.view.isShowModal,\n        };\n    });\n\n    \n    const loadPopup = () => { \n        switch (modalName) {\n            case 'ModalCountDown':  return <ModalCountDown/>;\n            case 'ModalResult':     return <ModalResult/>;\n            default: return;\n        }\n    }\n\n    useEffect(() => {\n        const focus = setTimeout(() => {\n            refBtn.current?.focus();\n        }, 100);\n\n        return () => { clearInterval(focus) }\n    }, []);\n\n    return (\n        <>\n        { isShowModal && \n            <div className=\"modal\">\n                <div className=\"modal-body\">\n                    {loadPopup()}\n                    {modalOption?.confirm && \n                        <button className=\"button\" \n                                onClick={() => (mole.hideModal())}\n                                ref={refBtn}\n                        >{modalOption?.confirm}</button>\n                    }\n                </div>                \n            </div>\n        }\n        </>\n\n        // <div>\n        //     <Background visible={isShowModal} />\n        //     <ModalSection visible={isShowModal}>\n        //         <Content>{loadPopup()}</Content>\n        //         {modalOption?.confirm &&<button onClick={() => (mole.hideModal())}>{modalOption?.confirm}</button>}\n        //     </ModalSection>\n        // </div>\n    );\n}\n\n// animations\nconst fadeIn = keyframes`\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\nconst fadeOut = keyframes`\n    0% {\n        opacity: 1;\n    }\n    100% {\n        opacity: 0;\n    }\n`;\n\n// components\nconst modalSettings = (visible: boolean) => css`\n    visibility: ${visible ? 'visible' : 'hidden'};\n    z-index: 15;\n    animation: ${visible ? fadeIn : fadeOut} 0.15s ease-out;\n    transition: visibility 0.15s ease-out;\n`;\n\nconst Background = styled.div<{ visible: boolean }>`\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    position: fixed;\n    background-color: rgba(0, 0, 0, 0.6);\n    ${(props) => modalSettings(props.visible)}\n`;\n\nconst ModalSection = styled.div<{ visible: boolean }>`\n    width: 50%;\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    ${(props) => modalSettings(props.visible)}\n`;\n\nconst Title = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    padding: 0 16px;\n`;\n\nconst Content = styled.div`\n    padding: 16px 0;\n\n`;\n\nexport default Modal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}