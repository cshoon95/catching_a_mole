{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx\",\n  _s = $RefreshSig$();\nimport ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\nimport ButtonGroup from \"./../comp/module/ButtonGroup\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [setPage] = useMovePage();\n  const {\n    screenData\n  } = useSelector(state => {\n    return {\n      screenData: state.data.screenData\n    };\n  });\n  const [timer, setTimer] = useState(true);\n\n  // 뒤로가기/앞으로가기 진행하는 경우 고려.\n  useEffect(() => {\n    mole.showModal('ModalCountDown');\n\n    // 카운트 다운 종료 후 실행\n    const id = setTimeout(() => {\n      mole.setState('isStart', true);\n    }, 4000);\n    let kd;\n    if (timer) {\n      const elList = mole.module.getHolesEl();\n      const showMole = () => {\n        elList.forEach(element => {\n          // 애니메이션 추가\n          mole.utils.addClassActive(element);\n\n          // 클릭 이벤트 추가 ({ once : true } 이벤트 한 번 만 실행)\n          element === null || element === void 0 ? void 0 : element.addEventListener('click', e => mole.module.onClick(e, element), {\n            once: true\n          });\n        });\n        showMole();\n        kd = setTimeout(mole.module.stoppingMole, 3000);\n      };\n    }\n    return () => {\n      clearTimeout(id);\n      clearTimeout(kd);\n    };\n  }, []);\n  const Table = () => {\n    let i = -1;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mole-list clearfix\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mole.utils.createArray(screenData.column).map((column, columnIdx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: mole.utils.createArray(screenData.row).map((row, rowIdx) => {\n              i = i + 1;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"mole\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\\uB450\\uB354\\uC9C0 \\uC774\\uBBF8\\uC9C0\",\n                  id: i.toString(),\n                  src: \"images/mole.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 45\n                }, this)\n              }, columnIdx + '-' + rowIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this);\n            })\n          }, columnIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"test-btn\",\n      onClick: () => mole.showModal('ModalGameTest', {\n        confirm: '닫기'\n      }),\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      callback: info => {\n        if (!['pause', 'stop'].includes(info.nextCode)) {\n          mole.showModal('ModalCountDown');\n\n          // 카운트 다운 종료 후 실행\n          setTimeout(() => {\n            mole.module.playingMole();\n          }, 4000);\n        } else if (['start', 'pause'].includes(info.nextCode)) {\n          mole.setState('timer', info.nextCode);\n        }\n\n        // 그만하기인 경우 준비화면으로 이동\n        if (info.nextCode === 'stop') {\n          mole.alert('정말 홈화면으로 이동하시겠어요?', {\n            confirm: '네',\n            cancel: '아니요',\n            closeHandler: res => {\n              if (res === 'confirm') {\n                mole.setState('timer', 'none');\n                mole.module.setScore();\n                setPage('/');\n              }\n            }\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"ecuZRR4GEn3aSa/1UM+vigXHRuw=\", false, function () {\n  return [useMovePage, useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["ProgressBar","useSelector","useMovePage","mole","ButtonGroup","useEffect","useState","Game","setPage","screenData","state","data","timer","setTimer","showModal","id","setTimeout","setState","kd","elList","module","getHolesEl","showMole","forEach","element","utils","addClassActive","addEventListener","e","onClick","once","stoppingMole","clearTimeout","Table","i","createArray","column","map","columnIdx","row","rowIdx","toString","confirm","info","includes","nextCode","playingMole","alert","cancel","closeHandler","res","setScore"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Game.tsx"],"sourcesContent":["import ProgressBar from \"../comp/module/ProgressBar\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType, listInfoType } from '../type/Type';\nimport useMovePage from \"../hooks/useMovePage\";\nimport mole from \"./../core/Mole\";\nimport ButtonGroup from \"./../comp/module/ButtonGroup\";\nimport { useEffect, useState } from \"react\";\n\nconst Game = () => {\n    const [ setPage ] = useMovePage();\n    const { screenData } = useSelector((state: StoreStateType) => {\n        return {\n            screenData: state.data.screenData,\n        }\n    });\n    const [timer, setTimer] = useState(true);\n\n    // 뒤로가기/앞으로가기 진행하는 경우 고려.\n    useEffect(() => {\n        mole.showModal('ModalCountDown');\n        \n        // 카운트 다운 종료 후 실행\n        const id = setTimeout(() => {\n            mole.setState('isStart', true);\n        }, 4000)\n\n        let kd: any;\n        if (timer) {\n            const elList = mole.module.getHolesEl();\n\n            const showMole = () => {\n                elList.forEach(element => {\n                    // 애니메이션 추가\n                    mole.utils.addClassActive(element);\n    \n                    // 클릭 이벤트 추가 ({ once : true } 이벤트 한 번 만 실행)\n                    element?.addEventListener('click', (e) => mole.module.onClick(e, element), { once : true });\n                });\n                \n                showMole();\n                kd = setTimeout(mole.module.stoppingMole, 3000);\n            }\n        }\n        return () => {\n            clearTimeout(id);\n            clearTimeout(kd);\n        }\n    }, [])\n\n    const Table = () => {\n        let i = -1;\n        return (\n            <table className=\"mole-list clearfix\" >\n                <tbody>\n                    {mole.utils.createArray(screenData.column).map((column: number, columnIdx: number) => {\n                        return (\n                            <tr key={columnIdx}>\n                                {mole.utils.createArray(screenData.row).map((row: number, rowIdx: number) => {\n                                    i = i + 1;\n                                    return (\n                                        <td className=\"mole\" \n                                            key={columnIdx + '-' + rowIdx} \n                                        >\n                                            <img alt=\"두더지 이미지\" \n                                                id={i.toString()}\n                                                src=\"images/mole.png\"\n                                                />\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        )\n    }\n\n    return (\n        <div className=\"main\">\n            <button className='test-btn' onClick={() => (mole.showModal('ModalGameTest', {confirm: '닫기'}))}>Test</button>\n            <ProgressBar />\n            <Table/>\n            <ButtonGroup callback={(info: listInfoType) => {\n                if (!['pause', 'stop'].includes(info.nextCode)) {\n                    mole.showModal('ModalCountDown');\n\n                    // 카운트 다운 종료 후 실행\n                    setTimeout(() => {\n                        mole.module.playingMole();\n                    }, 4000)\n                } else if (['start','pause'].includes(info.nextCode)) {\n                    mole.setState('timer', info.nextCode);\n                }\n    \n                // 그만하기인 경우 준비화면으로 이동\n                if (info.nextCode === 'stop') {\n                    mole.alert('정말 홈화면으로 이동하시겠어요?', {\n                        confirm: '네',\n                        cancel: '아니요',\n                        closeHandler: (res: any) => {\n                            if (res === 'confirm') {\n                                mole.setState('timer', 'none');\n                                mole.module.setScore();\n                                setPage('/'); \n                            }\n                        }\n                    })\n                }\n            }}/>\n        </div>\n    )\n}\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAAEC,OAAO,CAAE,GAAGN,WAAW,EAAE;EACjC,MAAM;IAAEO;EAAW,CAAC,GAAGR,WAAW,CAAES,KAAqB,IAAK;IAC1D,OAAO;MACHD,UAAU,EAAEC,KAAK,CAACC,IAAI,CAACF;IAC3B,CAAC;EACL,CAAC,CAAC;EACF,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZF,IAAI,CAACW,SAAS,CAAC,gBAAgB,CAAC;;IAEhC;IACA,MAAMC,EAAE,GAAGC,UAAU,CAAC,MAAM;MACxBb,IAAI,CAACc,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;IAClC,CAAC,EAAE,IAAI,CAAC;IAER,IAAIC,EAAO;IACX,IAAIN,KAAK,EAAE;MACP,MAAMO,MAAM,GAAGhB,IAAI,CAACiB,MAAM,CAACC,UAAU,EAAE;MAEvC,MAAMC,QAAQ,GAAG,MAAM;QACnBH,MAAM,CAACI,OAAO,CAACC,OAAO,IAAI;UACtB;UACArB,IAAI,CAACsB,KAAK,CAACC,cAAc,CAACF,OAAO,CAAC;;UAElC;UACAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAKzB,IAAI,CAACiB,MAAM,CAACS,OAAO,CAACD,CAAC,EAAEJ,OAAO,CAAC,EAAE;YAAEM,IAAI,EAAG;UAAK,CAAC,CAAC;QAC/F,CAAC,CAAC;QAEFR,QAAQ,EAAE;QACVJ,EAAE,GAAGF,UAAU,CAACb,IAAI,CAACiB,MAAM,CAACW,YAAY,EAAE,IAAI,CAAC;MACnD,CAAC;IACL;IACA,OAAO,MAAM;MACTC,YAAY,CAACjB,EAAE,CAAC;MAChBiB,YAAY,CAACd,EAAE,CAAC;IACpB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,KAAK,GAAG,MAAM;IAChB,IAAIC,CAAC,GAAG,CAAC,CAAC;IACV,oBACI;MAAO,SAAS,EAAC,oBAAoB;MAAA,uBACjC;QAAA,UACK/B,IAAI,CAACsB,KAAK,CAACU,WAAW,CAAC1B,UAAU,CAAC2B,MAAM,CAAC,CAACC,GAAG,CAAC,CAACD,MAAc,EAAEE,SAAiB,KAAK;UAClF,oBACI;YAAA,UACKnC,IAAI,CAACsB,KAAK,CAACU,WAAW,CAAC1B,UAAU,CAAC8B,GAAG,CAAC,CAACF,GAAG,CAAC,CAACE,GAAW,EAAEC,MAAc,KAAK;cACzEN,CAAC,GAAGA,CAAC,GAAG,CAAC;cACT,oBACI;gBAAI,SAAS,EAAC,MAAM;gBAAA,uBAGhB;kBAAK,GAAG,EAAC,uCAAS;kBACd,EAAE,EAAEA,CAAC,CAACO,QAAQ,EAAG;kBACjB,GAAG,EAAC;gBAAiB;kBAAA;kBAAA;kBAAA;gBAAA;cACnB,GALDH,SAAS,GAAG,GAAG,GAAGE,MAAM;gBAAA;gBAAA;gBAAA;cAAA,QAM5B;YAEb,CAAC;UAAC,GAbGF,SAAS;YAAA;YAAA;YAAA;UAAA,QAcb;QAEb,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACJ;EAEhB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAQ,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,MAAOnC,IAAI,CAACW,SAAS,CAAC,eAAe,EAAE;QAAC4B,OAAO,EAAE;MAAI,CAAC,CAAG;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7G,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACR,QAAC,WAAW;MAAC,QAAQ,EAAGC,IAAkB,IAAK;QAC3C,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,EAAE;UAC5C1C,IAAI,CAACW,SAAS,CAAC,gBAAgB,CAAC;;UAEhC;UACAE,UAAU,CAAC,MAAM;YACbb,IAAI,CAACiB,MAAM,CAAC0B,WAAW,EAAE;UAC7B,CAAC,EAAE,IAAI,CAAC;QACZ,CAAC,MAAM,IAAI,CAAC,OAAO,EAAC,OAAO,CAAC,CAACF,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,EAAE;UAClD1C,IAAI,CAACc,QAAQ,CAAC,OAAO,EAAE0B,IAAI,CAACE,QAAQ,CAAC;QACzC;;QAEA;QACA,IAAIF,IAAI,CAACE,QAAQ,KAAK,MAAM,EAAE;UAC1B1C,IAAI,CAAC4C,KAAK,CAAC,mBAAmB,EAAE;YAC5BL,OAAO,EAAE,GAAG;YACZM,MAAM,EAAE,KAAK;YACbC,YAAY,EAAGC,GAAQ,IAAK;cACxB,IAAIA,GAAG,KAAK,SAAS,EAAE;gBACnB/C,IAAI,CAACc,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC;gBAC9Bd,IAAI,CAACiB,MAAM,CAAC+B,QAAQ,EAAE;gBACtB3C,OAAO,CAAC,GAAG,CAAC;cAChB;YACJ;UACJ,CAAC,CAAC;QACN;MACJ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEd,CAAC;AAAA,GAxGKD,IAAI;EAAA,QACcL,WAAW,EACRD,WAAW;AAAA;AAAA,KAFhCM,IAAI;AA0GV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}