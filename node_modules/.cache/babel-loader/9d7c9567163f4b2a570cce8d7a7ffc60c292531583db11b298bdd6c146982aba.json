{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/Select.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from 'react-redux';\nimport mole from \"../../core/Mole\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = props => {\n  _s();\n  var _getInfo, _getInfo2, _getInfo3;\n  const {\n    screenData,\n    row,\n    column,\n    count\n  } = useSelector(state => {\n    return {\n      screenData: state.data.screenData,\n      row: state.data.screenData.row,\n      column: state.data.screenData.column,\n      count: state.data.screenData.count\n    };\n  });\n  const getInfo = () => {\n    const typeInfo = mole.list.screenDataList.find(e => e.value === props.type);\n    return typeInfo;\n  };\n  const onChange = e => {\n    debugger;\n    // 값 세팅\n    mole.setState('screenData', {\n      ...screenData,\n      [props.type]: Number(e.target.value)\n    });\n\n    // 행, 열이 변경돼서 선택할 수 없는 두더지 수가 되면 두더지 수 리셋\n    if (row > 0 && column > 0 && props.type !== 'count') {\n      var _mole$list$moleCountL, _mole$list$moleCountL2;\n      const min = (_mole$list$moleCountL = mole.list.moleCountList()[0]) === null || _mole$list$moleCountL === void 0 ? void 0 : _mole$list$moleCountL.value;\n      const max = (_mole$list$moleCountL2 = mole.list.moleCountList()[mole.list.moleCountList().length - 1]) === null || _mole$list$moleCountL2 === void 0 ? void 0 : _mole$list$moleCountL2.value;\n      if (min >= count || max <= count) {\n        mole.setState('screenData', {\n          ...mole.getState('screenData'),\n          count: 1\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: (_getInfo = getInfo()) === null || _getInfo === void 0 ? void 0 : _getInfo.value,\n      children: (_getInfo2 = getInfo()) === null || _getInfo2 === void 0 ? void 0 : _getInfo2.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: (_getInfo3 = getInfo()) === null || _getInfo3 === void 0 ? void 0 : _getInfo3.value,\n      onChange: onChange,\n      children: props.list.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.label\n        }, item.value + '-' + item.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this)\n  // <Main>\n  //     <SelectContainer>\n  //         <SelectHeader onClick={toggling}>{getTitle()}</SelectHeader>\n  //     {isOpen && <SelectListContainer>\n  //                     <SelectList>\n  //                         {props.list.map((item: {value: number, label: number}) => {\n  //                             return <ListItem onClick={onClick} key={item.value + '-' + item.label}>{item.label}</ListItem>\n  //                         })}\n  //                     </SelectList>\n  //                 </SelectListContainer>\n  //     }\n  //     </SelectContainer>\n  // </Main>\n  ;\n};\n_s(Select, \"1K6x4MSqI0xcVnu8mME/UP5BnzM=\", false, function () {\n  return [useSelector];\n});\n_c = Select;\nconst Main = styled(\"div\")`\n    font-family: sans-serif;\n    background: #f0f0f0;\n`;\nconst SelectContainer = styled(\"div\")`\n    width: 10.5em;\n    margin: 0 auto;\n`;\nconst SelectHeader = styled(\"div\")`\n    margin-bottom: 0.8em;\n    padding: 0.4em 2em 0.4em 1em;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n    font-weight: 500;\n    font-size: 1.3rem;\n    color: #3faffa;\n    background: #ffffff;\n`;\nconst SelectListContainer = styled(\"div\")``;\nconst SelectList = styled(\"ul\")`\n    padding: 0;\n    margin: 0;\n    padding-left: 1em;\n    background: #ffffff;\n    border: 2px solid #e5e5e5;\n    box-sizing: border-box;\n    color: #3faffa;\n    font-size: 1.3rem;\n    font-weight: 500;\n    &:first-child {\n        padding-top: 0.8em;\n    }\n`;\nconst ListItem = styled(\"li\")`\n    list-style: none;\n    margin-bottom: 0.8em;\n`;\nexport default Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","useSelector","mole","styled","Select","props","screenData","row","column","count","state","data","getInfo","typeInfo","list","screenDataList","find","e","value","type","onChange","setState","Number","target","min","moleCountList","max","length","getState","label","map","item","Main","SelectContainer","SelectHeader","SelectListContainer","SelectList","ListItem"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/Select.tsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../../type/Type';\nimport mole from \"../../core/Mole\";\nimport styled from \"styled-components\";\n\ninterface SelectPropsType {\n    type: 'row' | 'column' | 'count';       // 행 | 열 | 두더지 수\n    list: {value: number, label: number}[]  // Select Option\n}\n\nconst Select = (props: SelectPropsType) => {\n    const { screenData, row, column, count } = useSelector((state: StoreStateType) => {\n        return {\n            screenData: state.data.screenData,\n            row: state.data.screenData.row,\n            column: state.data.screenData.column,\n            count: state.data.screenData.count\n        }\n    });\n\n    const getInfo = () => {    \n        const typeInfo = mole.list.screenDataList.find(e => e.value === props.type)\n\n        return typeInfo;\n    }\n\n    const onChange = (e: any) => {\n        debugger\n        // 값 세팅\n        mole.setState('screenData', {\n            ...screenData, \n            [props.type]: Number(e.target.value)\n        });\n\n       // 행, 열이 변경돼서 선택할 수 없는 두더지 수가 되면 두더지 수 리셋\n        if (row > 0 && column > 0 && props.type !== 'count') {\n            const min = mole.list.moleCountList()[0]?.value;\n            const max = mole.list.moleCountList()[mole.list.moleCountList().length -1]?.value;\n\n            if (min >= count || max <= count) {\n                mole.setState('screenData', {\n                    ...mole.getState('screenData'), \n                    count: 1\n                });\n            }\n        }\n    }\n\n    return (\n        <div className=\"main\">\n            <label htmlFor={getInfo()?.value}>{getInfo()?.label}</label>\n            <select id={getInfo()?.value} onChange={onChange}>\n                {props.list.map((item: {value: number, label: number}) => {\n                    return <option key={item.value + '-' + item.label} value={item.value}>{item.label}</option>\n                })}\n            </select>\n        </div>\n        // <Main>\n        //     <SelectContainer>\n        //         <SelectHeader onClick={toggling}>{getTitle()}</SelectHeader>\n        //     {isOpen && <SelectListContainer>\n        //                     <SelectList>\n        //                         {props.list.map((item: {value: number, label: number}) => {\n        //                             return <ListItem onClick={onClick} key={item.value + '-' + item.label}>{item.label}</ListItem>\n        //                         })}\n        //                     </SelectList>\n        //                 </SelectListContainer>\n        //     }\n        //     </SelectContainer>\n        // </Main>\n    )\n}\n\nconst Main = styled(\"div\")`\n    font-family: sans-serif;\n    background: #f0f0f0;\n`;\n\nconst SelectContainer = styled(\"div\")`\n    width: 10.5em;\n    margin: 0 auto;\n`;\n\nconst SelectHeader = styled(\"div\")`\n    margin-bottom: 0.8em;\n    padding: 0.4em 2em 0.4em 1em;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n    font-weight: 500;\n    font-size: 1.3rem;\n    color: #3faffa;\n    background: #ffffff;\n`;\n\nconst SelectListContainer = styled(\"div\")``;\n\nconst SelectList = styled(\"ul\")`\n    padding: 0;\n    margin: 0;\n    padding-left: 1em;\n    background: #ffffff;\n    border: 2px solid #e5e5e5;\n    box-sizing: border-box;\n    color: #3faffa;\n    font-size: 1.3rem;\n    font-weight: 500;\n    &:first-child {\n        padding-top: 0.8em;\n    }\n`;\n\nconst ListItem = styled(\"li\")`\n    list-style: none;\n    margin-bottom: 0.8em;\n`;\n\nexport default Select;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}