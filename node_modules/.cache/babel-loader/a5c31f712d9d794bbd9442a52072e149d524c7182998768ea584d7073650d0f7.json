{"ast":null,"code":"import _defineProperty from\"/Users/soohoon/Desktop/kakao/20230207-jsh/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/Users/soohoon/Desktop/kakao/20230207-jsh/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/soohoon/Desktop/kakao/20230207-jsh/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{movePage as _movePage,showAlert,hideAlert,showModal as _showModal,hideModal as _hideModal}from\"../store/View\";import{setState as _setState}from\"../store/Data\";import List from\"./List\";import Utils from\"./Utils\";import Module from\"./Module\";export var Mole=/*#__PURE__*/function(){function Mole(){_classCallCheck(this,Mole);this._store=void 0;}_createClass(Mole,[{key:\"init\",value:/**\n     * Store 초기화.\n     * @param inStore Store\n     */function init(inStore){this._store=inStore;}},{key:\"store\",get:function get(){return this._store;},set:function set(inStore){this.store=inStore;}},{key:\"state\",get:function get(){return this.store.getState();}/** list 확장 */},{key:\"list\",get:function get(){return new List();}/** Utils 확장 */},{key:\"utils\",get:function get(){return new Utils();}/** Module 확장 */},{key:\"module\",get:function get(){return new Module();}/**\n     * 얼럿 모달 오픈 \n     * @param message 메시지\n     * @param option 옵션\n     * \n     * @see\n     * message === 'hide' 는 모달 닫기\n     */},{key:\"alert\",value:function alert(message,option){message==='hide'?this._store.dispatch(hideAlert()):this._store.dispatch(showAlert({message:message,alertOption:option}));option&&console.log(message+'의 옵션 값: ',option);}/**\n     * 모달 열기\n     * @param name 모달명  \n     * @param option 모달 옵션\n     */},{key:\"showModal\",value:function showModal(name,option){this._store.dispatch(_showModal({modalName:name,modalOption:option}));option&&console.log(name+'의 옵션 값: ',option);}/** 모달 닫기 */},{key:\"hideModal\",value:function hideModal(){this._store.dispatch(_hideModal());}/**\n     * 스토어에 있는 상태 값 가져오기.\n     * @param key DataStateType | viewStateType 키\n     * @param type data | view\n     * @returns 키의 값\n     */},{key:\"getState\",value:function getState(key){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'data';return this.store.getState()[type][key];}/**\n     * 스토어에 있는 Data 상태 값 변경.\n     * @param key StateType 데이터에 등록되어있는 타입\n     * @param value 바꿀 값\n     */},{key:\"setState\",value:function setState(key,value){this.store.dispatch(_setState(_defineProperty({},key,value)));}/**\n     * 페이지 이동하기.\n     * @param path 이동할 페이지\n     */},{key:\"movePage\",value:function movePage(path){this.store.dispatch(_movePage({pageName:path}));}}]);return Mole;}();// 개발자도구 디버깅 안걸고, 값 확인할 때를 위해 추가\nvar mole=window.devmole=new Mole();export default mole;","map":{"version":3,"names":["movePage","showAlert","hideAlert","showModal","hideModal","setState","List","Utils","Module","Mole","_store","inStore","store","getState","message","option","dispatch","alertOption","console","log","name","modalName","modalOption","key","type","value","path","pageName","mole","window","devmole"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Mole.ts"],"sourcesContent":["import { Store } from \"redux\";\nimport { initialDataState, initialViewState, StoreStateType, AlertOptionType, ModalOptionType } from './../type/Type';\nimport { movePage, showAlert, hideAlert, showModal, hideModal } from \"../store/View\";\nimport { setState } from \"../store/Data\";\nimport List from \"./List\";\nimport Utils from \"./Utils\";\nimport Module from \"./Module\";\n\ntype StateType = keyof typeof initialDataState | keyof typeof initialViewState;\n\nexport class Mole {\n    private _store!: Store;\n\n    /**\n     * Store 초기화.\n     * @param inStore Store\n     */\n    public init(inStore: Store) {\n        this._store = inStore;\n    }\n\n    public get store() {\n        return this._store;\n    }\n\n    public set store(inStore: Store) {\n        this.store = inStore;\n    }\n\n    public get state(): StoreStateType {\n        return this.store.getState()\n    }\n    \n    /** list 확장 */\n    public get list() {\n        return new List();\n    }\n\n    /** Utils 확장 */\n    public get utils() {\n        return new Utils();\n    }\n    \n    /** Module 확장 */\n    public get module() {\n        return new Module();\n    }\n    \n    /**\n     * 얼럿 모달 오픈 \n     * @param message 메시지\n     * @param option 옵션\n     * \n     * @see\n     * message === 'hide' 는 모달 닫기\n     */\n    public alert(message: string, option?: AlertOptionType) {\n        (message === 'hide') ? this._store.dispatch(hideAlert()) : this._store.dispatch(showAlert({ message, alertOption: option }))\n        \n        option && console.log(message + '의 옵션 값: ', option);\n    }\n\n    /**\n     * 모달 열기\n     * @param name 모달명  \n     * @param option 모달 옵션\n     */\n    public showModal(name: string, option?: ModalOptionType) {\n        this._store.dispatch(showModal({\n            modalName: name,\n            modalOption: option\n        }))\n\n        option && console.log(name + '의 옵션 값: ', option);\n    }\n\n    /** 모달 닫기 */\n    public hideModal() {\n        this._store.dispatch(hideModal())\n    }\n\n    /**\n     * 스토어에 있는 상태 값 가져오기.\n     * @param key DataStateType | viewStateType 키\n     * @param type data | view\n     * @returns 키의 값\n     */\n    public getState(key: StateType, type: string = 'data') {\n        return this.store.getState()[type][key];\n    }\n\n    /**\n     * 스토어에 있는 Data 상태 값 변경.\n     * @param key StateType 데이터에 등록되어있는 타입\n     * @param value 바꿀 값\n     */\n    public setState(key: StateType, value: any): void {\n        this.store.dispatch(setState(\n            { [key]: value }\n        ));\n    }\n\n    /**\n     * 페이지 이동하기.\n     * @param path 이동할 페이지\n     */\n    public movePage(path: string) {\n        this.store.dispatch(movePage({\n            pageName: path\n        }))\n    }\n}\n\n// 개발자도구 디버깅 안걸고, 값 확인할 때를 위해 추가\nconst mole = (window as any).devmole = new Mole();\nexport default mole;"],"mappings":"6XAEA,OAASA,QAAQ,GAARA,UAAQ,CAAEC,SAAS,CAAEC,SAAS,CAAEC,SAAS,GAATA,WAAS,CAAEC,SAAS,GAATA,WAAS,KAAQ,eAAe,CACpF,OAASC,QAAQ,GAARA,UAAQ,KAAQ,eAAe,CACxC,MAAOC,KAAI,KAAM,QAAQ,CACzB,MAAOC,MAAK,KAAM,SAAS,CAC3B,MAAOC,OAAM,KAAM,UAAU,CAI7B,UAAaC,KAAI,yEACLC,MAAM,8CAEd;AACJ;AACA;AACA,OACI,cAAYC,OAAc,CAAE,CACxB,IAAI,CAACD,MAAM,CAAGC,OAAO,CACzB,CAAC,mBAED,cAAmB,CACf,MAAO,KAAI,CAACD,MAAM,CACtB,CAAC,KAED,aAAiBC,OAAc,CAAE,CAC7B,IAAI,CAACC,KAAK,CAAGD,OAAO,CACxB,CAAC,mBAED,cAAmC,CAC/B,MAAO,KAAI,CAACC,KAAK,CAACC,QAAQ,EAAE,CAChC,CAEA,gCACA,cAAkB,CACd,MAAO,IAAIP,KAAI,EAAE,CACrB,CAEA,kCACA,cAAmB,CACf,MAAO,IAAIC,MAAK,EAAE,CACtB,CAEA,oCACA,cAAoB,CAChB,MAAO,IAAIC,OAAM,EAAE,CACvB,CAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,OAPI,qBAQA,eAAaM,OAAe,CAAEC,MAAwB,CAAE,CACnDD,OAAO,GAAK,MAAM,CAAI,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAACd,SAAS,EAAE,CAAC,CAAG,IAAI,CAACQ,MAAM,CAACM,QAAQ,CAACf,SAAS,CAAC,CAAEa,OAAO,CAAPA,OAAO,CAAEG,WAAW,CAAEF,MAAO,CAAC,CAAC,CAAC,CAE5HA,MAAM,EAAIG,OAAO,CAACC,GAAG,CAACL,OAAO,CAAG,UAAU,CAAEC,MAAM,CAAC,CACvD,CAEA;AACJ;AACA;AACA;AACA,OAJI,yBAKA,mBAAiBK,IAAY,CAAEL,MAAwB,CAAE,CACrD,IAAI,CAACL,MAAM,CAACM,QAAQ,CAACb,UAAS,CAAC,CAC3BkB,SAAS,CAAED,IAAI,CACfE,WAAW,CAAEP,MACjB,CAAC,CAAC,CAAC,CAEHA,MAAM,EAAIG,OAAO,CAACC,GAAG,CAACC,IAAI,CAAG,UAAU,CAAEL,MAAM,CAAC,CACpD,CAEA,qCACA,oBAAmB,CACf,IAAI,CAACL,MAAM,CAACM,QAAQ,CAACZ,UAAS,EAAE,CAAC,CACrC,CAEA;AACJ;AACA;AACA;AACA;AACA,OALI,wBAMA,kBAAgBmB,GAAc,CAAyB,IAAvBC,KAAY,2DAAG,MAAM,CACjD,MAAO,KAAI,CAACZ,KAAK,CAACC,QAAQ,EAAE,CAACW,IAAI,CAAC,CAACD,GAAG,CAAC,CAC3C,CAEA;AACJ;AACA;AACA;AACA,OAJI,wBAKA,kBAAgBA,GAAc,CAAEE,KAAU,CAAQ,CAC9C,IAAI,CAACb,KAAK,CAACI,QAAQ,CAACX,SAAQ,oBACrBkB,GAAG,CAAGE,KAAK,EACjB,CAAC,CACN,CAEA;AACJ;AACA;AACA,OAHI,wBAIA,kBAAgBC,IAAY,CAAE,CAC1B,IAAI,CAACd,KAAK,CAACI,QAAQ,CAAChB,SAAQ,CAAC,CACzB2B,QAAQ,CAAED,IACd,CAAC,CAAC,CAAC,CACP,CAAC,oBAGL;AACA,GAAME,KAAI,CAAIC,MAAM,CAASC,OAAO,CAAG,GAAIrB,KAAI,EAAE,CACjD,cAAemB,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}