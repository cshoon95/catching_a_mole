{"ast":null,"code":"export default class Utils {\n  /**\n   * 일시 포맷팅\n   * @param date 포맷팅할 Date\n   * @returns yyyy/mm/dd-hh:mi:ss\n   */\n  sysdate(date) {\n    const yyyy = date.getFullYear();\n    const mm = ('0' + (date.getMonth() + 1)).slice(-2);\n    const dd = ('0' + date.getDate()).slice(-2);\n    const hh = ('0' + date.getHours()).slice(-2);\n    const mi = ('0' + date.getMinutes()).slice(-2);\n    const ss = ('0' + date.getSeconds()).slice(-2);\n    return yyyy + '/' + mm + '/' + dd + ' ' + hh + ':' + mi + ':' + ss;\n  }\n\n  /**\n   * 테이블 행 or 열 리스트로 생성\n   * @param num 행 or 열의 값\n   * @returns 개수에 따른 height값\n   */\n  createArray(num) {\n    return Array(num).fill(0).map((arr, i) => {\n      return i;\n    });\n  }\n\n  /**\n   * active 클래스 추가\n   * @param el 추가할 El\n   */\n  addClassActive(el) {\n    el === null || el === void 0 ? void 0 : el.classList.add('active');\n  }\n\n  /**\n   * active 클래스 제거\n   * @param el 삭제할 El\n   */\n  removeClassActive(el) {\n    el === null || el === void 0 ? void 0 : el.classList.remove('active');\n  }\n\n  /**\n   * 랜덤 값 가져오기\n   * @param max 랜덤 값의 최대값 범위\n   * @returns {string} 1~max 값 \n   */\n  randomNum(max) {\n    return Math.floor(Math.random() * max).toString();\n  }\n\n  /**\n   * 스코어 내림차순 및 개수 뽑아오기\n   * @param arr 순위 리스트\n   * @param num 뽑아올 개수\n   */\n  sortArray(arr, num) {\n    arr.slice(0, num).sort((a, b) => b.score - a.score);\n  }\n}","map":{"version":3,"names":["Utils","sysdate","date","yyyy","getFullYear","mm","getMonth","slice","dd","getDate","hh","getHours","mi","getMinutes","ss","getSeconds","createArray","num","Array","fill","map","arr","i","addClassActive","el","classList","add","removeClassActive","remove","randomNum","max","Math","floor","random","toString","sortArray","sort","a","b","score"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Utils.ts"],"sourcesContent":["\nexport default class Utils {\n    /**\n     * 일시 포맷팅\n     * @param date 포맷팅할 Date\n     * @returns yyyy/mm/dd-hh:mi:ss\n     */\n    sysdate(date: Date): string {\n        const yyyy = date.getFullYear();\n        const mm = ('0' + (date.getMonth() + 1)).slice(-2);\n        const dd = ('0' + date.getDate()).slice(-2);\n        const hh = ('0' + date.getHours()).slice(-2); \n        const mi = ('0' + date.getMinutes()).slice(-2);\n        const ss = ('0' + date.getSeconds()).slice(-2); \n\n        return yyyy + '/' + mm + '/' + dd + ' ' + hh + ':' + mi + ':' + ss;\n    }\n\n    /**\n     * 테이블 행 or 열 리스트로 생성\n     * @param num 행 or 열의 값\n     * @returns 개수에 따른 height값\n     */\n    createArray(num: number): number[] {\n        return Array(num).fill(0).map((arr, i) => {\n            return i\n        })\n    }\n\n    /**\n     * active 클래스 추가\n     * @param el 추가할 El\n     */\n    addClassActive(el: Element | null) {\n        el?.classList.add('active');\n    }\n\n    /**\n     * active 클래스 제거\n     * @param el 삭제할 El\n     */\n    removeClassActive(el: Element | null) {\n        el?.classList.remove('active');\n    }\n\n    /**\n     * 랜덤 값 가져오기\n     * @param max 랜덤 값의 최대값 범위\n     * @returns {string} 1~max 값 \n     */\n    randomNum(max: number) {\n        return Math.floor((Math.random() * (max))).toString();\n    }\n\n    /**\n     * 스코어 내림차순 및 개수 뽑아오기\n     * @param arr 순위 리스트\n     * @param num 뽑아올 개수\n     */\n    sortArray(arr: {score: number, sysdate: string}[], num: number) {\n        arr.slice(0, num).sort((a, b) => b.score - a.score)\n    }\n}"],"mappings":"AACA,eAAe,MAAMA,KAAK,CAAC;EACvB;AACJ;AACA;AACA;AACA;EACIC,OAAO,CAACC,IAAU,EAAU;IACxB,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,EAAE;IAC/B,MAAMC,EAAE,GAAG,CAAC,GAAG,IAAIH,IAAI,CAACI,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,MAAMC,EAAE,GAAG,CAAC,GAAG,GAAGN,IAAI,CAACO,OAAO,EAAE,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMG,EAAE,GAAG,CAAC,GAAG,GAAGR,IAAI,CAACS,QAAQ,EAAE,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5C,MAAMK,EAAE,GAAG,CAAC,GAAG,GAAGV,IAAI,CAACW,UAAU,EAAE,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAMO,EAAE,GAAG,CAAC,GAAG,GAAGZ,IAAI,CAACa,UAAU,EAAE,EAAER,KAAK,CAAC,CAAC,CAAC,CAAC;IAE9C,OAAOJ,IAAI,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGG,EAAE,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGE,EAAE;EACtE;;EAEA;AACJ;AACA;AACA;AACA;EACIE,WAAW,CAACC,GAAW,EAAY;IAC/B,OAAOC,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MACtC,OAAOA,CAAC;IACZ,CAAC,CAAC;EACN;;EAEA;AACJ;AACA;AACA;EACIC,cAAc,CAACC,EAAkB,EAAE;IAC/BA,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;EAC/B;;EAEA;AACJ;AACA;AACA;EACIC,iBAAiB,CAACH,EAAkB,EAAE;IAClCA,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEC,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC;EAClC;;EAEA;AACJ;AACA;AACA;AACA;EACIC,SAAS,CAACC,GAAW,EAAE;IACnB,OAAOC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAIH,GAAI,CAAE,CAACI,QAAQ,EAAE;EACzD;;EAEA;AACJ;AACA;AACA;AACA;EACIC,SAAS,CAACd,GAAuC,EAAEJ,GAAW,EAAE;IAC5DI,GAAG,CAACd,KAAK,CAAC,CAAC,EAAEU,GAAG,CAAC,CAACmB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;EACvD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}