{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Ready.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport mole from \"./../core/Mole\";\nimport useMovePage from \"../hooks/useMovePage\";\nimport Select from \"../comp/module/Select\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ready = () => {\n  _s();\n  const [setPage] = useMovePage();\n  const {\n    screenData\n  } = useSelector(state => {\n    return {\n      screenData: state.data.screenData\n    };\n  });\n  // 시작 버튼 클릭 이벤트 핸들러\n  const btnClickHandler = () => {\n    var _mole$list$screenData;\n    const screenDataValues = Object.values(screenData);\n    const screenDataKeys = Object.keys(screenData);\n    const emptyValue = screenDataValues.find(value => value === 0);\n    const emptyIndex = screenDataValues.findIndex(value => value === 0);\n    const emptyLabel = (_mole$list$screenData = mole.list.screenDataList.find(e => e.value === screenDataKeys[emptyIndex])) === null || _mole$list$screenData === void 0 ? void 0 : _mole$list$screenData.label;\n\n    // 값에 0이 포함되어 있다면 종료\n    if (emptyValue === 0) return mole.alert(`${emptyLabel}의 값을 선택해 주세요.`);\n\n    // game 페이지로 이동\n    setPage('game');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      type: \"row\",\n      list: mole.list.rowColumnList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      type: \"column\",\n      list: mole.list.rowColumnList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      type: \"count\",\n      list: mole.list.moleCountList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      ref: btnClickHandler,\n      children: \"\\uC2DC\\uC791\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Ready, \"ixEAY9nBqkZgf27UkTleQrBF0tU=\", false, function () {\n  return [useMovePage, useSelector];\n});\n_c = Ready;\nconst Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: #bdc3c7;\n`;\n_c2 = Container;\nconst Button = styled.button`\n    display: inline-flex;\n    align-items: center;\n    outline: none;\n    border: none;\n    border-radius: 4px;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    height: 5.25rem;\n    width: 5.8rem;\n    font-size: 2rem;\n    background: #228be6;\n    &:hover{\n        background: #339af0;\n    }\n    &:active{\n        background: #1c7ed6;\n    }\n    & + & {\n        margin-left: 1rem;\n    }\n`;\n_c3 = Button;\nexport default Ready;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Ready\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"names":["styled","mole","useMovePage","Select","useSelector","Ready","setPage","screenData","state","data","btnClickHandler","screenDataValues","Object","values","screenDataKeys","keys","emptyValue","find","value","emptyIndex","findIndex","emptyLabel","list","screenDataList","e","label","alert","rowColumnList","moleCountList","Container","div","Button","button"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/page/Ready.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport mole from \"./../core/Mole\";\nimport useMovePage from \"../hooks/useMovePage\";\nimport useClick from \"../hooks/useClick\";\nimport Select from \"../comp/module/Select\";\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../type/Type';\n\nconst Ready = () => {\n    const [ setPage ] = useMovePage();\n    const { screenData } = useSelector((state: StoreStateType) => {\n        return {\n            screenData: state.data.screenData\n        }\n    });\n    // 시작 버튼 클릭 이벤트 핸들러\n    const btnClickHandler = () => {\n        const screenDataValues = Object.values(screenData);\n        const screenDataKeys = Object.keys(screenData);\n        const emptyValue = screenDataValues.find((value: number) => value === 0);\n        const emptyIndex = screenDataValues.findIndex((value: number) => value === 0);\n        const emptyLabel = mole.list.screenDataList.find(e => e.value === screenDataKeys[emptyIndex])?.label;\n\n        // 값에 0이 포함되어 있다면 종료\n        if (emptyValue === 0) return mole.alert(`${emptyLabel}의 값을 선택해 주세요.`);\n\n        // game 페이지로 이동\n        setPage('game')\n    };\n\n    return (\n        <Container>\n            <Select type=\"row\" list={mole.list.rowColumnList}/>\n            <Select type=\"column\" list={mole.list.rowColumnList}/>\n            <Select type=\"count\" list={mole.list.moleCountList()}/>\n            <Button ref={btnClickHandler}>시작</Button>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: #bdc3c7;\n`;\n\nconst Button = styled.button`\n    display: inline-flex;\n    align-items: center;\n    outline: none;\n    border: none;\n    border-radius: 4px;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    height: 5.25rem;\n    width: 5.8rem;\n    font-size: 2rem;\n    background: #228be6;\n    &:hover{\n        background: #339af0;\n    }\n    &:active{\n        background: #1c7ed6;\n    }\n    & + & {\n        margin-left: 1rem;\n    }\n`;\n\nexport default Ready;"],"mappings":";;AAAA,OAAOA,MAAM,MAAe,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,WAAW,MAAM,sBAAsB;AAE9C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,WAAW,QAAQ,aAAa;AAAC;AAG1C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAAEC,OAAO,CAAE,GAAGJ,WAAW,EAAE;EACjC,MAAM;IAAEK;EAAW,CAAC,GAAGH,WAAW,CAAEI,KAAqB,IAAK;IAC1D,OAAO;MACHD,UAAU,EAAEC,KAAK,CAACC,IAAI,CAACF;IAC3B,CAAC;EACL,CAAC,CAAC;EACF;EACA,MAAMG,eAAe,GAAG,MAAM;IAAA;IAC1B,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAACN,UAAU,CAAC;IAClD,MAAMO,cAAc,GAAGF,MAAM,CAACG,IAAI,CAACR,UAAU,CAAC;IAC9C,MAAMS,UAAU,GAAGL,gBAAgB,CAACM,IAAI,CAAEC,KAAa,IAAKA,KAAK,KAAK,CAAC,CAAC;IACxE,MAAMC,UAAU,GAAGR,gBAAgB,CAACS,SAAS,CAAEF,KAAa,IAAKA,KAAK,KAAK,CAAC,CAAC;IAC7E,MAAMG,UAAU,4BAAGpB,IAAI,CAACqB,IAAI,CAACC,cAAc,CAACN,IAAI,CAACO,CAAC,IAAIA,CAAC,CAACN,KAAK,KAAKJ,cAAc,CAACK,UAAU,CAAC,CAAC,0DAA1E,sBAA4EM,KAAK;;IAEpG;IACA,IAAIT,UAAU,KAAK,CAAC,EAAE,OAAOf,IAAI,CAACyB,KAAK,CAAE,GAAEL,UAAW,eAAc,CAAC;;IAErE;IACAf,OAAO,CAAC,MAAM,CAAC;EACnB,CAAC;EAED,oBACI,QAAC,SAAS;IAAA,wBACN,QAAC,MAAM;MAAC,IAAI,EAAC,KAAK;MAAC,IAAI,EAAEL,IAAI,CAACqB,IAAI,CAACK;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eACnD,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,IAAI,EAAE1B,IAAI,CAACqB,IAAI,CAACK;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eACtD,QAAC,MAAM;MAAC,IAAI,EAAC,OAAO;MAAC,IAAI,EAAE1B,IAAI,CAACqB,IAAI,CAACM,aAAa;IAAG;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD,QAAC,MAAM;MAAC,GAAG,EAAElB,eAAgB;MAAA,UAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEpB,CAAC;AAAA,GA9BKL,KAAK;EAAA,QACaH,WAAW,EACRE,WAAW;AAAA;AAAA,KAFhCC,KAAK;AAgCX,MAAMwB,SAAS,GAAG7B,MAAM,CAAC8B,GAAI;AAC7B;AACA;AACA;AACA,CAAC;AAAC,MAJID,SAAS;AAMf,MAAME,MAAM,GAAG/B,MAAM,CAACgC,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAxBID,MAAM;AA0BZ,eAAe1B,KAAK;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}