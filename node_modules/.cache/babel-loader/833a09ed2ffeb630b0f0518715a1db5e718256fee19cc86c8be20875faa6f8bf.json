{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/core/Select.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import { withKnobs } from '@storybook/addon-knobs'\\n\\ntype SelectType = {\\n    /** 헤드 정보 */\\n    head: {id: string, label: string};\\n    /** 옵션 정보 */\\n    option: {value: string, label: string}[]\\n    /** change 이벤트 핸들러 */\\n    changeHandler?: any;\\n    /** ref */\\n    ref?: any\\n}\\n\\nexport const Select = (props: SelectType) => {\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\" >\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id}\\n                    value={undefined}\\n                    ref={props.ref}\\n                >\\n                    {props.option.map((item: {value: string, label: string}) => {\\n                        return <option value={item.value}>{item.label}</option>\\n                    })}\\n                </select>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default {\\n    component: Select,\\n    title: 'Core/Select',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nSelect.args = {\\n    head: {id:'0', label:'두더지 수'},\\n    option: [\\n        {value: 10, label: 10},\\n        {value: 20, label: 20},\\n        {value: 30, label: 30},\\n    ],\\n    changeHandler: () => {}\\n}\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Select\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 32\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 32\n    }\n  }\n};\nimport { withKnobs } from '@storybook/addon-knobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Select = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.head.id,\n        children: props.head.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-text\",\n        id: props.head.id,\n        value: undefined,\n        ref: props.ref,\n        children: props.option.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.value,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Select;\nexport default {\n  component: Select,\n  title: 'Core/Select',\n  decorators: [withKnobs]\n};\nSelect.args = {\n  head: {\n    id: '0',\n    label: '두더지 수'\n  },\n  option: [{\n    value: 10,\n    label: 10\n  }, {\n    value: 20,\n    label: 20\n  }, {\n    value: 30,\n    label: 30\n  }],\n  changeHandler: () => {}\n};\nSelect.parameters = {\n  storySource: {\n    source: \"(props: SelectType) => {\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\" >\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id}\\n                    value={undefined}\\n                    ref={props.ref}\\n                >\\n                    {props.option.map((item: {value: string, label: string}) => {\\n                        return <option value={item.value}>{item.label}</option>\\n                    })}\\n                </select>\\n            </div>\\n        </div>\\n    );\\n}\"\n  },\n  ...Select.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Select\");\nexport const __namedExportsOrder = [\"Select\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","withKnobs","Select","props","head","id","label","undefined","ref","option","map","item","value","component","title","decorators","args","changeHandler","parameters","storySource","source"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/core/Select.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { withKnobs } from '@storybook/addon-knobs'\\n\\ntype SelectType = {\\n    /** 헤드 정보 */\\n    head: {id: string, label: string};\\n    /** 옵션 정보 */\\n    option: {value: string, label: string}[]\\n    /** change 이벤트 핸들러 */\\n    changeHandler?: any;\\n    /** ref */\\n    ref?: any\\n}\\n\\nexport const Select = (props: SelectType) => {\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\" >\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id}\\n                    value={undefined}\\n                    ref={props.ref}\\n                >\\n                    {props.option.map((item: {value: string, label: string}) => {\\n                        return <option value={item.value}>{item.label}</option>\\n                    })}\\n                </select>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default {\\n    component: Select,\\n    title: 'Core/Select',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nSelect.args = {\\n    head: {id:'0', label:'두더지 수'},\\n    option: [\\n        {value: 10, label: 10},\\n        {value: 20, label: 20},\\n        {value: 30, label: 30},\\n    ],\\n    changeHandler: () => {}\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Select\":{\"startLoc\":{\"col\":22,\"line\":14},\"endLoc\":{\"col\":1,\"line\":32},\"startBody\":{\"col\":22,\"line\":14},\"endBody\":{\"col\":1,\"line\":32}}};\n    \nimport { withKnobs } from '@storybook/addon-knobs'\n\ntype SelectType = {\n    /** 헤드 정보 */\n    head: {id: string, label: string};\n    /** 옵션 정보 */\n    option: {value: string, label: string}[]\n    /** change 이벤트 핸들러 */\n    changeHandler?: any;\n    /** ref */\n    ref?: any\n}\n\nexport const Select = (props: SelectType) => {\n    return (\n        <div className=\"select-wrap\">\n            <div className=\"select-box\" >\n                <label htmlFor={props.head.id}>{props.head.label}</label>\n                <select\n                    className=\"select-text\"\n                    id={props.head.id}\n                    value={undefined}\n                    ref={props.ref}\n                >\n                    {props.option.map((item: {value: string, label: string}) => {\n                        return <option value={item.value}>{item.label}</option>\n                    })}\n                </select>\n            </div>\n        </div>\n    );\n};\nexport default {\n    component: Select,\n    title: 'Core/Select',\n    decorators: [withKnobs]\n    \n}\n\nSelect.args = {\n    head: {id:'0', label:'두더지 수'},\n    option: [\n        {value: 10, label: 10},\n        {value: 20, label: 20},\n        {value: 30, label: 30},\n    ],\n    changeHandler: () => {}\n}\n\n\nSelect.parameters = { storySource: { source: \"(props: SelectType) => {\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\" >\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id}\\n                    value={undefined}\\n                    ref={props.ref}\\n                >\\n                    {props.option.map((item: {value: string, label: string}) => {\\n                        return <option value={item.value}>{item.label}</option>\\n                    })}\\n                </select>\\n            </div>\\n        </div>\\n    );\\n}\" }, ...Select.parameters };"],"mappings":";AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,ixCAAixC;AACjyC;AACA,IAAIC,iBAAiB,GAAG;EAAC,QAAQ,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAEpK,SAASC,SAAS,QAAQ,wBAAwB;AAAA;AAalD,OAAO,MAAMC,MAAM,GAAIC,KAAiB,IAAK;EACzC,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,uBACxB;MAAK,SAAS,EAAC,YAAY;MAAA,wBACvB;QAAO,OAAO,EAAEA,KAAK,CAACC,IAAI,CAACC,EAAG;QAAA,UAAEF,KAAK,CAACC,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eACzD;QACI,SAAS,EAAC,aAAa;QACvB,EAAE,EAAEH,KAAK,CAACC,IAAI,CAACC,EAAG;QAClB,KAAK,EAAEE,SAAU;QACjB,GAAG,EAAEJ,KAAK,CAACK,GAAI;QAAA,UAEdL,KAAK,CAACM,MAAM,CAACC,GAAG,CAAEC,IAAoC,IAAK;UACxD,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAACC,KAAM;YAAA,UAAED,IAAI,CAACL;UAAK;YAAA;YAAA;YAAA;UAAA,QAAU;QAC3D,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KAlBWJ,MAAM;AAmBnB,eAAe;EACXW,SAAS,EAAEX,MAAM;EACjBY,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,CAACd,SAAS;AAE1B,CAAC;AAEDC,MAAM,CAACc,IAAI,GAAG;EACVZ,IAAI,EAAE;IAACC,EAAE,EAAC,GAAG;IAAEC,KAAK,EAAC;EAAO,CAAC;EAC7BG,MAAM,EAAE,CACJ;IAACG,KAAK,EAAE,EAAE;IAAEN,KAAK,EAAE;EAAE,CAAC,EACtB;IAACM,KAAK,EAAE,EAAE;IAAEN,KAAK,EAAE;EAAE,CAAC,EACtB;IAACM,KAAK,EAAE,EAAE;IAAEN,KAAK,EAAE;EAAE,CAAC,CACzB;EACDW,aAAa,EAAE,MAAM,CAAC;AAC1B,CAAC;AAGDf,MAAM,CAACgB,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAgqB,CAAC;EAAE,GAAGlB,MAAM,CAACgB;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}