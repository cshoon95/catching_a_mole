{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/core/Select.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import { useState } from \\\"react\\\";\\nimport { withKnobs } from '@storybook/addon-knobs'\\n\\ntype SelectType = {\\n    /** 헤드 정보 */\\n    head: {id: string, label: string};\\n    /** 옵션 정보 */\\n    option: {value: string, label: string}\\n    /** change 이벤트 핸들러 */\\n    changeHandler?: any;\\n    /** ref */\\n    ref?: any\\n}\\n\\nexport const Select = (props: SelectType) => {\\n    const [value, setValue] = useState(undefined);\\n\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\">\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id} \\n                    onChange={props.changeHandler}\\n                    value={value}\\n                >\\n                    <option value={item.value}>{item.label}</option>\\n                </select>\\n            </div>\\n        </div>\\n    );\\n    \\n}\\n\\nexport default {\\n    component: Alert,\\n    title: 'Core/Alert',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nAlert.args = {\\n    message: '두더지를 잡아볼까요?',\\n    confirm: '확인',\\n    cancel: '취소',\\n    closeHandler: () => {}\\n}\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Select\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 15\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 34\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 15\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 34\n    }\n  }\n};\nimport { useState } from \"react\";\nimport { withKnobs } from '@storybook/addon-knobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Select = props => {\n  _s();\n  const [value, setValue] = useState(undefined);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.head.id,\n        children: props.head.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-text\",\n        id: props.head.id,\n        onChange: props.changeHandler,\n        value: value,\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Select, \"TsY2/YXXLtz+kascaor/c6KK6xE=\");\n_c = Select;\nexport default {\n  component: Alert,\n  title: 'Core/Alert',\n  decorators: [withKnobs]\n};\nAlert.args = {\n  message: '두더지를 잡아볼까요?',\n  confirm: '확인',\n  cancel: '취소',\n  closeHandler: () => {}\n};\nSelect.parameters = {\n  storySource: {\n    source: \"(props: SelectType) => {\\n    const [value, setValue] = useState(undefined);\\n\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\">\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id} \\n                    onChange={props.changeHandler}\\n                    value={value}\\n                >\\n                    <option value={item.value}>{item.label}</option>\\n                </select>\\n            </div>\\n        </div>\\n    );\\n    \\n}\"\n  },\n  ...Select.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Select\");\nexport const __namedExportsOrder = [\"Select\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","useState","withKnobs","Select","props","value","setValue","undefined","head","id","label","changeHandler","item","component","Alert","title","decorators","args","message","confirm","cancel","closeHandler","parameters","storySource","source"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/core/Select.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { useState } from \\\"react\\\";\\nimport { withKnobs } from '@storybook/addon-knobs'\\n\\ntype SelectType = {\\n    /** 헤드 정보 */\\n    head: {id: string, label: string};\\n    /** 옵션 정보 */\\n    option: {value: string, label: string}\\n    /** change 이벤트 핸들러 */\\n    changeHandler?: any;\\n    /** ref */\\n    ref?: any\\n}\\n\\nexport const Select = (props: SelectType) => {\\n    const [value, setValue] = useState(undefined);\\n\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\">\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id} \\n                    onChange={props.changeHandler}\\n                    value={value}\\n                >\\n                    <option value={item.value}>{item.label}</option>\\n                </select>\\n            </div>\\n        </div>\\n    );\\n    \\n}\\n\\nexport default {\\n    component: Alert,\\n    title: 'Core/Alert',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nAlert.args = {\\n    message: '두더지를 잡아볼까요?',\\n    confirm: '확인',\\n    cancel: '취소',\\n    closeHandler: () => {}\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Select\":{\"startLoc\":{\"col\":22,\"line\":15},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":22,\"line\":15},\"endBody\":{\"col\":1,\"line\":34}}};\n    \nimport { useState } from \"react\";\nimport { withKnobs } from '@storybook/addon-knobs'\n\ntype SelectType = {\n    /** 헤드 정보 */\n    head: {id: string, label: string};\n    /** 옵션 정보 */\n    option: {value: string, label: string}\n    /** change 이벤트 핸들러 */\n    changeHandler?: any;\n    /** ref */\n    ref?: any\n}\n\nexport const Select = (props: SelectType) => {\n    const [value, setValue] = useState(undefined);\n\n    return (\n        <div className=\"select-wrap\">\n            <div className=\"select-box\">\n                <label htmlFor={props.head.id}>{props.head.label}</label>\n                <select\n                    className=\"select-text\"\n                    id={props.head.id} \n                    onChange={props.changeHandler}\n                    value={value}\n                >\n                    <option value={item.value}>{item.label}</option>\n                </select>\n            </div>\n        </div>\n    );\n    \n};\nexport default {\n    component: Alert,\n    title: 'Core/Alert',\n    decorators: [withKnobs]\n    \n}\n\nAlert.args = {\n    message: '두더지를 잡아볼까요?',\n    confirm: '확인',\n    cancel: '취소',\n    closeHandler: () => {}\n}\n\n\nSelect.parameters = { storySource: { source: \"(props: SelectType) => {\\n    const [value, setValue] = useState(undefined);\\n\\n    return (\\n        <div className=\\\"select-wrap\\\">\\n            <div className=\\\"select-box\\\">\\n                <label htmlFor={props.head.id}>{props.head.label}</label>\\n                <select\\n                    className=\\\"select-text\\\"\\n                    id={props.head.id} \\n                    onChange={props.changeHandler}\\n                    value={value}\\n                >\\n                    <option value={item.value}>{item.label}</option>\\n                </select>\\n            </div>\\n        </div>\\n    );\\n    \\n}\" }, ...Select.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,sqCAAsqC;AACtrC;AACA,IAAIC,iBAAiB,GAAG;EAAC,QAAQ,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAEpK,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,wBAAwB;AAAA;AAalD,OAAO,MAAMC,MAAM,GAAIC,KAAiB,IAAK;EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACM,SAAS,CAAC;EAE7C,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,uBACxB;MAAK,SAAS,EAAC,YAAY;MAAA,wBACvB;QAAO,OAAO,EAAEH,KAAK,CAACI,IAAI,CAACC,EAAG;QAAA,UAAEL,KAAK,CAACI,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eACzD;QACI,SAAS,EAAC,aAAa;QACvB,EAAE,EAAEN,KAAK,CAACI,IAAI,CAACC,EAAG;QAClB,QAAQ,EAAEL,KAAK,CAACO,aAAc;QAC9B,KAAK,EAAEN,KAAM;QAAA,uBAEb;UAAQ,KAAK,EAAEO,IAAI,CAACP,KAAM;UAAA,UAAEO,IAAI,CAACF;QAAK;UAAA;UAAA;UAAA;QAAA;MAAU;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACJ;AAGd,CAAC;AAAC,GAnBWP,MAAM;AAAA,KAANA,MAAM;AAoBnB,eAAe;EACXU,SAAS,EAAEC,KAAK;EAChBC,KAAK,EAAE,YAAY;EACnBC,UAAU,EAAE,CAACd,SAAS;AAE1B,CAAC;AAEDY,KAAK,CAACG,IAAI,GAAG;EACTC,OAAO,EAAE,aAAa;EACtBC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,IAAI;EACZC,YAAY,EAAE,MAAM,CAAC;AACzB,CAAC;AAGDlB,MAAM,CAACmB,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAgnB,CAAC;EAAE,GAAGrB,MAAM,CAACmB;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}