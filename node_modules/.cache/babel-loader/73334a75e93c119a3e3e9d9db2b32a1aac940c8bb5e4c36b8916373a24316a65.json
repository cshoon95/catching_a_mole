{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/Alert.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// div 태그에 Modal을 구현하는데 전체적으로 필요한 CSS를 구현\nexport const ModalContainer = styled.div`\n  // Open Modal 글자의 위치를 중간으로 이동\n    height: 15rem;\n    text-align: center;\n    margin: 120px auto;\n`;\n\n// div 태그에 Modal이 떴을 때의(클릭 후) 배경을 깔아주는 CSS를 구현\n_c = ModalContainer;\nexport const ModalBackdrop = styled.div`\n    background-color: greenyellow;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n\n// button 태그에 Modal 버튼을 보여주는 CSS를 구현\n_c2 = ModalBackdrop;\nexport const ModalBtn = styled.button`\n    background-color: #4000c7;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n    cursor: grab;\n`;\n\n// div 태그로서 Modal이 떴을 때 Modal 창의 CSS를 구현\n// attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가\n_c3 = ModalBtn;\nexport const ModalView = styled.div.attrs(props => ({\n  role: 'dialog'\n}))`\n    // Modal창 CSS를 구현\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n_c4 = ModalView;\nconst Alert = () => {\n  _s();\n  const refBtn = useRef(null);\n  const {\n    alertMessage,\n    alertOption\n  } = useSelector(state => {\n    return {\n      alertMessage: state.view.alertMessage,\n      alertOption: state.view.alertOption\n    };\n  });\n  useEffect(() => {\n    setTimeout(() => {\n      var _refBtn$current;\n      (_refBtn$current = refBtn.current) === null || _refBtn$current === void 0 ? void 0 : _refBtn$current.focus();\n    }, 100);\n  }, [alertMessage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ModalBtn, {\n        children: alertMessage ? \"Opened!\" : \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), alertMessage ? /*#__PURE__*/_jsxDEV(ModalBackdrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this) && /*#__PURE__*/_jsxDEV(ModalView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 51\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Alert, \"cY7tvKYteUI8ROkYtWlDApjZ02s=\", false, function () {\n  return [useSelector];\n});\n_c5 = Alert;\nexport default Alert;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ModalContainer\");\n$RefreshReg$(_c2, \"ModalBackdrop\");\n$RefreshReg$(_c3, \"ModalBtn\");\n$RefreshReg$(_c4, \"ModalView\");\n$RefreshReg$(_c5, \"Alert\");","map":{"version":3,"names":["styled","useEffect","useRef","useSelector","ModalContainer","div","ModalBackdrop","ModalBtn","button","ModalView","attrs","props","role","Alert","refBtn","alertMessage","alertOption","state","view","setTimeout","current","focus"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/Alert.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport mole from '../../core/Mole';\nimport { StoreStateType } from '../../type/Type';\n\n// div 태그에 Modal을 구현하는데 전체적으로 필요한 CSS를 구현\nexport const ModalContainer = styled.div`\n  // Open Modal 글자의 위치를 중간으로 이동\n    height: 15rem;\n    text-align: center;\n    margin: 120px auto;\n`;\n\n// div 태그에 Modal이 떴을 때의(클릭 후) 배경을 깔아주는 CSS를 구현\nexport const ModalBackdrop = styled.div`\n    background-color: greenyellow;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n\n// button 태그에 Modal 버튼을 보여주는 CSS를 구현\nexport const ModalBtn = styled.button`\n    background-color: #4000c7;\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n    cursor: grab;\n`;\n\n// div 태그로서 Modal이 떴을 때 Modal 창의 CSS를 구현\n  // attrs 메소드를 이용해서 아래와 같이 div 엘리먼트에 속성을 추가\nexport const ModalView = styled.div.attrs(props => ({ \n    role: 'dialog'\n}))`\n    // Modal창 CSS를 구현\n    text-decoration: none;\n    border: none;\n    padding: 20px;\n    color: white;\n    border-radius: 30px;\n`;\n\nconst Alert = () => {\n    const refBtn = useRef<HTMLButtonElement>(null);\n    const { alertMessage, alertOption } = useSelector(\n        (state: StoreStateType) => {\n            return {\n                alertMessage: state.view.alertMessage,\n                alertOption: state.view.alertOption\n            };\n        },\n    );\n\n    useEffect(() => {\n        setTimeout(() => {\n            refBtn.current?.focus();\n        }, 100);\n    }, [alertMessage]);\n\n    return (\n        <>\n        <ModalContainer>\n            <ModalBtn> \n            {alertMessage ? \"Opened!\" : \"Open Modal\"}\n            </ModalBtn>\n            {alertMessage ? (<ModalBackdrop />)&&(<ModalView />) : \"\"}\n        </ModalContainer>\n        </>\n    );\n    \n}\n\nexport default Alert;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,aAAa;AAAC;AAAA;AAI1C;AACA,OAAO,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAI;AACzC;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,KAPaD,cAAc;AAQ3B,OAAO,MAAME,aAAa,GAAGN,MAAM,CAACK,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA,MATaC,aAAa;AAU1B,OAAO,MAAMC,QAAQ,GAAGP,MAAM,CAACQ,MAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACE;AAAA,MAXWD,QAAQ;AAYrB,OAAO,MAAME,SAAS,GAAGT,MAAM,CAACK,GAAG,CAACK,KAAK,CAACC,KAAK,KAAK;EAChDC,IAAI,EAAE;AACV,CAAC,CAAC,CAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MATWH,SAAS;AAWtB,MAAMI,KAAK,GAAG,MAAM;EAAA;EAChB,MAAMC,MAAM,GAAGZ,MAAM,CAAoB,IAAI,CAAC;EAC9C,MAAM;IAAEa,YAAY;IAAEC;EAAY,CAAC,GAAGb,WAAW,CAC5Cc,KAAqB,IAAK;IACvB,OAAO;MACHF,YAAY,EAAEE,KAAK,CAACC,IAAI,CAACH,YAAY;MACrCC,WAAW,EAAEC,KAAK,CAACC,IAAI,CAACF;IAC5B,CAAC;EACL,CAAC,CACJ;EAEDf,SAAS,CAAC,MAAM;IACZkB,UAAU,CAAC,MAAM;MAAA;MACb,mBAAAL,MAAM,CAACM,OAAO,oDAAd,gBAAgBC,KAAK,EAAE;IAC3B,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAElB,oBACI;IAAA,uBACA,QAAC,cAAc;MAAA,wBACX,QAAC,QAAQ;QAAA,UACRA,YAAY,GAAG,SAAS,GAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QAC7B,EACVA,YAAY,GAAG,aAAC,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA,QAAG,iBAAI,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAI,GAAG,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAC5C,iBACd;AAGX,CAAC;AAAA,GA5BKF,KAAK;EAAA,QAE+BV,WAAW;AAAA;AAAA,MAF/CU,KAAK;AA8BX,eAAeA,KAAK;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}