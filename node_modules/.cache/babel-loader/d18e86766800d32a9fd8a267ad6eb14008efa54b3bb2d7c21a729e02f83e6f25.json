{"ast":null,"code":"export default class Utils {\n  /**\n   * 일시 포맷팅\n   * @param date 포맷팅할 Date\n   * @returns yyyy/mm/dd-hh:mi:ss\n   */\n  sysdate(date) {\n    const yyyy = date.getFullYear();\n    const mm = ('0' + (date.getMonth() + 1)).slice(-2);\n    const dd = ('0' + date.getDate()).slice(-2);\n    const hh = ('0' + date.getHours()).slice(-2);\n    const mi = ('0' + date.getMinutes()).slice(-2);\n    const ss = ('0' + date.getSeconds()).slice(-2);\n    return yyyy + '/' + mm + '/' + dd + '-' + hh + ':' + mi + ':' + ss;\n  }\n\n  /**\n   * 테이블 행 or 열 리스트로 생성\n   * @param num 행 or 열의 값\n   * @returns 개수에 따른 height값\n   */\n  createArray(num) {\n    return Array(num).fill(0).map((arr, i) => {\n      let result = 0;\n      switch (Array(num).length) {\n        case 2:\n          return result = 280;\n        case 3:\n          return result = 180;\n        case 4:\n          return result = 140;\n        case 5:\n          return result = 110;\n        case 6:\n          return result = 90;\n      }\n      return result;\n    });\n  }\n  showMole(el) {\n    el.className.add('active');\n  }\n  hideMole(el) {\n    el.classList.remove('active');\n  }\n  randomNum(max) {\n    // 두더지 굴의 최소값은 4 (행2, 열2)\n    const min = 4;\n    return Math.floor(Math.random() * (max - min) + min).toString();\n  }\n}","map":{"version":3,"names":["Utils","sysdate","date","yyyy","getFullYear","mm","getMonth","slice","dd","getDate","hh","getHours","mi","getMinutes","ss","getSeconds","createArray","num","Array","fill","map","arr","i","result","length","showMole","el","className","add","hideMole","classList","remove","randomNum","max","min","Math","floor","random","toString"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/core/Utils.ts"],"sourcesContent":["\nexport default class Utils {\n    /**\n     * 일시 포맷팅\n     * @param date 포맷팅할 Date\n     * @returns yyyy/mm/dd-hh:mi:ss\n     */\n    sysdate(date: Date): string {\n        const yyyy = date.getFullYear();\n        const mm = ('0' + (date.getMonth() + 1)).slice(-2);\n        const dd = ('0' + date.getDate()).slice(-2);\n        const hh = ('0' + date.getHours()).slice(-2); \n        const mi = ('0' + date.getMinutes()).slice(-2);\n        const ss = ('0' + date.getSeconds()).slice(-2); \n\n        return yyyy + '/' + mm + '/' + dd + '-' + hh + ':' + mi + ':' + ss;\n    }\n\n    /**\n     * 테이블 행 or 열 리스트로 생성\n     * @param num 행 or 열의 값\n     * @returns 개수에 따른 height값\n     */\n    createArray(num: number): number[] {\n        return Array(num).fill(0).map((arr, i) => {\n            let result = 0;\n\n            switch(Array(num).length) {\n                case 2: return result = 280;\n                case 3: return result = 180;\n                case 4: return result = 140;\n                case 5: return result = 110;\n                case 6: return result = 90;\n            }\n            \n            return result;\n        })\n    }\n\n    showMole(el: any) {\n        el.className.add('active');\n    }\n\n    hideMole(el: Element) {\n        el.classList.remove('active');\n    }\n\n    randomNum(max: number) {\n        // 두더지 굴의 최소값은 4 (행2, 열2)\n        const min = 4;\n        return Math.floor((Math.random() * (max - min)) + min).toString();\n    } \n}"],"mappings":"AACA,eAAe,MAAMA,KAAK,CAAC;EACvB;AACJ;AACA;AACA;AACA;EACIC,OAAO,CAACC,IAAU,EAAU;IACxB,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,EAAE;IAC/B,MAAMC,EAAE,GAAG,CAAC,GAAG,IAAIH,IAAI,CAACI,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,MAAMC,EAAE,GAAG,CAAC,GAAG,GAAGN,IAAI,CAACO,OAAO,EAAE,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMG,EAAE,GAAG,CAAC,GAAG,GAAGR,IAAI,CAACS,QAAQ,EAAE,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5C,MAAMK,EAAE,GAAG,CAAC,GAAG,GAAGV,IAAI,CAACW,UAAU,EAAE,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAMO,EAAE,GAAG,CAAC,GAAG,GAAGZ,IAAI,CAACa,UAAU,EAAE,EAAER,KAAK,CAAC,CAAC,CAAC,CAAC;IAE9C,OAAOJ,IAAI,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGG,EAAE,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGE,EAAE,GAAG,GAAG,GAAGE,EAAE;EACtE;;EAEA;AACJ;AACA;AACA;AACA;EACIE,WAAW,CAACC,GAAW,EAAY;IAC/B,OAAOC,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MACtC,IAAIC,MAAM,GAAG,CAAC;MAEd,QAAOL,KAAK,CAACD,GAAG,CAAC,CAACO,MAAM;QACpB,KAAK,CAAC;UAAE,OAAOD,MAAM,GAAG,GAAG;QAC3B,KAAK,CAAC;UAAE,OAAOA,MAAM,GAAG,GAAG;QAC3B,KAAK,CAAC;UAAE,OAAOA,MAAM,GAAG,GAAG;QAC3B,KAAK,CAAC;UAAE,OAAOA,MAAM,GAAG,GAAG;QAC3B,KAAK,CAAC;UAAE,OAAOA,MAAM,GAAG,EAAE;MAAC;MAG/B,OAAOA,MAAM;IACjB,CAAC,CAAC;EACN;EAEAE,QAAQ,CAACC,EAAO,EAAE;IACdA,EAAE,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;EAC9B;EAEAC,QAAQ,CAACH,EAAW,EAAE;IAClBA,EAAE,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACjC;EAEAC,SAAS,CAACC,GAAW,EAAE;IACnB;IACA,MAAMC,GAAG,GAAG,CAAC;IACb,OAAOC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,IAAIJ,GAAG,GAAGC,GAAG,CAAC,GAAIA,GAAG,CAAC,CAACI,QAAQ,EAAE;EACrE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}