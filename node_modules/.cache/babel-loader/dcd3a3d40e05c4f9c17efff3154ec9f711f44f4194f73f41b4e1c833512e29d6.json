{"ast":null,"code":"var _jsxFileName = \"/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/ProgressBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useMovePage from \"../../hooks/useMovePage\";\nimport useInterval from \"../../hooks/useInterval\";\nimport mole from \"../../core/Mole\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgressBar = () => {\n  _s();\n  const [setPage] = useMovePage();\n  const [time, setTime] = useState(60);\n  const [score, setScore] = useState(0);\n  const {\n    timer,\n    rankList\n  } = useSelector(state => {\n    return {\n      timer: state.data.timer,\n      rankList: state.data.rankList\n    };\n  });\n  useInterval(() => {\n    if (timer === 'start') {\n      setTime(time - 1);\n      setScore(mole.module.getScore());\n      if (time === 0) {\n        mole.setState('rankList', [...rankList, {\n          score: mole.module.getScore(),\n          sysdate: mole.utils.sysdate(new Date())\n        }]);\n        mole.setState('timer', 'end');\n        setPage('/rank');\n      }\n    }\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['start', 'pause'].includes(timer) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        className: \"progress-bar\",\n        value: time,\n        max: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: `${time}초`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ProgressBar, \"tWVeJefrXPC9z+K0qcCZptTgcBk=\", false, function () {\n  return [useMovePage, useSelector, useInterval];\n});\n_c = ProgressBar;\nexport default _c2 = /*#__PURE__*/React.memo(ProgressBar);\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useSelector","useMovePage","useInterval","mole","ProgressBar","setPage","time","setTime","score","setScore","timer","rankList","state","data","module","getScore","setState","sysdate","utils","Date","includes","memo"],"sources":["/Users/soohoon/Desktop/kakao/20230207-jsh/src/comp/module/ProgressBar.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { StoreStateType } from '../../type/Type';\nimport useMovePage from \"../../hooks/useMovePage\";\nimport useInterval from \"../../hooks/useInterval\";\nimport mole from \"../../core/Mole\";\n\nconst ProgressBar = () => {\n    const [ setPage ] = useMovePage();\n    const [ time, setTime ] = useState(60);\n    const [ score, setScore ] = useState(0);\n    const { timer, rankList } = useSelector((state: StoreStateType) => {\n        return {\n            timer: state.data.timer,\n            rankList: state.data.rankList\n        }\n    });\n    \n    useInterval(() => {\n        if (timer === 'start') {\n            setTime(time - 1);\n            setScore(mole.module.getScore());\n            if (time === 0) {\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\n                mole.setState('timer', 'end');\n                setPage('/rank');\n            }\n        }\n    }, 1000);\n\n    return (\n        <>\n        {\n            ['start', 'pause'].includes(timer) && \n            <div className='progress-wrap'>\n                <progress className='progress-bar' value={time} max={60}/>\n                <span className='progress-text'>{`${time}초`}</span>\n            </div>\n        }\n        </>\n    )\n}\n\nexport default React.memo(ProgressBar);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAA2B,OAAO;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,IAAI,MAAM,iBAAiB;AAAC;AAAA;AAEnC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAAEC,OAAO,CAAE,GAAGJ,WAAW,EAAE;EACjC,MAAM,CAAEK,IAAI,EAAEC,OAAO,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAES,KAAK,EAAEC,QAAQ,CAAE,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM;IAAEW,KAAK;IAAEC;EAAS,CAAC,GAAGX,WAAW,CAAEY,KAAqB,IAAK;IAC/D,OAAO;MACHF,KAAK,EAAEE,KAAK,CAACC,IAAI,CAACH,KAAK;MACvBC,QAAQ,EAAEC,KAAK,CAACC,IAAI,CAACF;IACzB,CAAC;EACL,CAAC,CAAC;EAEFT,WAAW,CAAC,MAAM;IACd,IAAIQ,KAAK,KAAK,OAAO,EAAE;MACnBH,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MACjBG,QAAQ,CAACN,IAAI,CAACW,MAAM,CAACC,QAAQ,EAAE,CAAC;MAChC,IAAIT,IAAI,KAAK,CAAC,EAAE;QACZH,IAAI,CAACa,QAAQ,CAAC,UAAU,EAAE,CAAC,GAAGL,QAAQ,EAAE;UAACH,KAAK,EAAEL,IAAI,CAACW,MAAM,CAACC,QAAQ,EAAE;UAAEE,OAAO,EAAEd,IAAI,CAACe,KAAK,CAACD,OAAO,CAAC,IAAIE,IAAI,EAAE;QAAC,CAAC,CAAE,CAAC;QACnHhB,IAAI,CAACa,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC;QAC7BX,OAAO,CAAC,OAAO,CAAC;MACpB;IACJ;EACJ,CAAC,EAAE,IAAI,CAAC;EAER,oBACI;IAAA,UAEI,CAAC,OAAO,EAAE,OAAO,CAAC,CAACe,QAAQ,CAACV,KAAK,CAAC,iBAClC;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC1B;QAAU,SAAS,EAAC,cAAc;QAAC,KAAK,EAAEJ,IAAK;QAAC,GAAG,EAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1D;QAAM,SAAS,EAAC,eAAe;QAAA,UAAG,GAAEA,IAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACjD,iBAEP;AAEX,CAAC;AAAA,GAlCKF,WAAW;EAAA,QACOH,WAAW,EAGHD,WAAW,EAOvCE,WAAW;AAAA;AAAA,KAXTE,WAAW;AAoCjB,kCAAeN,KAAK,CAACuB,IAAI,CAACjB,WAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}