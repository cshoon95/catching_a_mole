"use strict";
globalThis["webpackHotUpdatekakao"]("main",{

/***/ "./src/stories/core/Modal.stories.tsx":
/*!********************************************!*\
  !*** ./src/stories/core/Modal.stories.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Modal": () => (/* binding */ Modal),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/addon-knobs */ "./node_modules/@storybook/addon-knobs/dist/index.js");
/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../common.css */ "./src/stories/common.css");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/core/Modal.stories.tsx",
  _s = __webpack_require__.$Refresh$.signature();
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { useState } from 'react';\nimport { withKnobs } from '@storybook/addon-knobs'\nimport \"./../common.css\";\n\ntype ModalType = {\n    /** 오픈할 팝업 El */\n    children: React.ReactElement;\n    /** 모달 닫히면 실행되는 이벤트 */\n    closeHandler?: Function;\n    /** 확인 버튼 명 */\n    confirm?: string;\n    /** ref */\n    ref?: any\n}\n\nexport const Modal = (manager: ModalType) => {\n    const [ isShow, setIsShow ] = useState(false);\n\n    const ModalManager = (props: ModalType) => {\n        const btnClickHandler = () => {\n            props.callbackFunc && props.callbackFunc();\n            setIsShow(false);\n        }\n\n        return (\n            <>\n            { isShow && \n            <div className=\"modal\">\n                <div className={\"modal-body\"}>\n                    {props.children}\n                    {props?.confirm && \n                        <button className=\"button\" \n                                onClick={btnClickHandler}\n                                ref={props.ref}\n                        >{props?.confirm}</button>\n                    }\n                </div>                \n            </div>\n            }\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <button className=\"btn\" onClick={() => (setIsShow(true))}>\n                Modal\n            </button>\n            <ModalManager \n                children={manager.children} \n                confirm={manager.confirm}\n                ref={manager.ref}\n                callbackFunc={manager.callbackFunc}/>\n        </div>\n    );\n    \n}\n\nexport default {\n    component: Modal,\n    title: 'Core/Modal',\n    decorators: [withKnobs]\n}\n\nModal.args = {\n    children: <p>children</p>,\n    confirm: '확인',\n    callbackFunc: () => {}\n}";
// @ts-ignore
var __LOCATIONS_MAP__ = {
  "Modal": {
    "startLoc": {
      "col": 21,
      "line": 16
    },
    "endLoc": {
      "col": 1,
      "line": 57
    },
    "startBody": {
      "col": 21,
      "line": 16
    },
    "endBody": {
      "col": 1,
      "line": 57
    }
  }
};





const Modal = manager => {
  _s();
  const [isShow, setIsShow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const ModalManager = props => {
    const btnClickHandler = () => {
      props.callbackFunc && props.callbackFunc();
      setIsShow(false);
    };
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
      children: isShow && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "modal",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
          className: "modal-body",
          children: [props.children, (props === null || props === void 0 ? void 0 : props.confirm) && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("button", {
            className: "button",
            onClick: btnClickHandler,
            ref: props.ref,
            children: props === null || props === void 0 ? void 0 : props.confirm
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 40,
            columnNumber: 25
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 37,
          columnNumber: 17
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 36,
        columnNumber: 13
      }, undefined)
    }, void 0, false);
  };
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("button", {
      className: "btn",
      onClick: () => setIsShow(true),
      children: "Modal"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 13
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(ModalManager, {
      children: manager.children,
      confirm: manager.confirm,
      ref: manager.ref,
      callbackFunc: manager.callbackFunc
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 13
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 53,
    columnNumber: 9
  }, undefined);
};
_s(Modal, "Lw92Jm1dO1hdgb+if9nVuMI+J54=");
_c = Modal;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  component: Modal,
  title: 'Core/Modal',
  decorators: [_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__.withKnobs]
});
Modal.args = {
  children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("p", {
    children: "children"
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 73,
    columnNumber: 15
  }, undefined),
  confirm: '확인',
  callbackFunc: () => {}
};
Modal.parameters = {
  storySource: {
    source: "(manager: ModalType) => {\n    const [ isShow, setIsShow ] = useState(false);\n\n    const ModalManager = (props: ModalType) => {\n        const btnClickHandler = () => {\n            props.callbackFunc && props.callbackFunc();\n            setIsShow(false);\n        }\n\n        return (\n            <>\n            { isShow && \n            <div className=\"modal\">\n                <div className={\"modal-body\"}>\n                    {props.children}\n                    {props?.confirm && \n                        <button className=\"button\" \n                                onClick={btnClickHandler}\n                                ref={props.ref}\n                        >{props?.confirm}</button>\n                    }\n                </div>                \n            </div>\n            }\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <button className=\"btn\" onClick={() => (setIsShow(true))}>\n                Modal\n            </button>\n            <ModalManager \n                children={manager.children} \n                confirm={manager.confirm}\n                ref={manager.ref}\n                callbackFunc={manager.callbackFunc}/>\n        </div>\n    );\n    \n}"
  },
  ...Modal.parameters
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Modal");
const __namedExportsOrder = ["Modal"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    Modal.displayName = "Modal";
    // @ts-ignore
    Modal.__docgenInfo = { "description": "", "displayName": "Modal", "props": { "children": { "defaultValue": null, "description": "\uC624\uD508\uD560 \uD31D\uC5C5 El", "name": "children", "required": true, "type": { "name": "ReactElement<any, string | JSXElementConstructor<any>>" } }, "closeHandler": { "defaultValue": null, "description": "\uBAA8\uB2EC \uB2EB\uD788\uBA74 \uC2E4\uD589\uB418\uB294 \uC774\uBCA4\uD2B8", "name": "closeHandler", "required": false, "type": { "name": "Function" } }, "confirm": { "defaultValue": null, "description": "\uD655\uC778 \uBC84\uD2BC \uBA85", "name": "confirm", "required": false, "type": { "name": "string" } }, "ref": { "defaultValue": null, "description": "ref", "name": "ref", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/stories/core/Modal.stories.tsx#Modal"] = { docgenInfo: Modal.__docgenInfo, name: "Modal", path: "src/stories/core/Modal.stories.tsx#Modal" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=main.d3ce2ad1aa9769fba2f7.hot-update.js.map