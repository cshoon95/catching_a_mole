{"version":3,"file":"main.f64553cb30bbc523d370.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAOA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAxBA;AAwBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://kakao/./src/stories/comp/Progressbar.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { withKnobs } from '@storybook/addon-knobs'\\nimport { useState } from \\\"react\\\";\\n\\ntype ProgressbarType = {\\n    /** 설정할 값 */\\n    time: number;\\n}\\n\\nexport const ProgressBar = (props: ProgressbarType) => {\\n    const [ timer, setTimer ] = useState(60);\\n\\n    setInterval(() => {\\n        setTimer(time - 1);\\n        if (timer === 'start' && isStart) {\\n            setScore(mole.module.getScore());\\n\\n            if (time === 0) {\\n                mole.module.stopMole();\\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\\n                mole.setState('timer', 'end');\\n                mole.setState('showResult', true);\\n                mole.setState('score', mole.module.getScore());\\n                setPage('/rank');\\n            }\\n        }\\n    }, 1000)\\n    return (\\n        <div className='progress-wrap'>\\n            <progress className='progress-bar' value={props.time} max={props.time}/>\\n            <span className='progress-timer'>{`${props.time}초`}</span>\\n        </div>\\n    )\\n}\\nexport default {\\n    component: ProgressBar,\\n    title: 'Comp/ProgressBar',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nProgressBar.args = {\\n    message: '두더지를 잡아볼까요?',\\n    confirm: '확인',\\n    cancel: '취소',\\n    closeHandler: () => {}\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ProgressBar\":{\"startLoc\":{\"col\":27,\"line\":9},\"endLoc\":{\"col\":1,\"line\":33},\"startBody\":{\"col\":27,\"line\":9},\"endBody\":{\"col\":1,\"line\":33}}};\n    \nimport { withKnobs } from '@storybook/addon-knobs'\nimport { useState } from \"react\";\n\ntype ProgressbarType = {\n    /** 설정할 값 */\n    time: number;\n}\n\nexport const ProgressBar = (props: ProgressbarType) => {\n    const [ timer, setTimer ] = useState(60);\n\n    setInterval(() => {\n        setTimer(time - 1);\n        if (timer === 'start' && isStart) {\n            setScore(mole.module.getScore());\n\n            if (time === 0) {\n                mole.module.stopMole();\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\n                mole.setState('timer', 'end');\n                mole.setState('showResult', true);\n                mole.setState('score', mole.module.getScore());\n                setPage('/rank');\n            }\n        }\n    }, 1000)\n    return (\n        <div className='progress-wrap'>\n            <progress className='progress-bar' value={props.time} max={props.time}/>\n            <span className='progress-timer'>{`${props.time}초`}</span>\n        </div>\n    )\n};export default {\n    component: ProgressBar,\n    title: 'Comp/ProgressBar',\n    decorators: [withKnobs]\n    \n}\n\nProgressBar.args = {\n    message: '두더지를 잡아볼까요?',\n    confirm: '확인',\n    cancel: '취소',\n    closeHandler: () => {}\n}\n\n\n\nProgressBar.parameters = { storySource: { source: \"(props: ProgressbarType) => {\\n    const [ timer, setTimer ] = useState(60);\\n\\n    setInterval(() => {\\n        setTimer(time - 1);\\n        if (timer === 'start' && isStart) {\\n            setScore(mole.module.getScore());\\n\\n            if (time === 0) {\\n                mole.module.stopMole();\\n                mole.setState('rankList', [...rankList, {score: mole.module.getScore(), sysdate: mole.utils.sysdate(new Date())} ])\\n                mole.setState('timer', 'end');\\n                mole.setState('showResult', true);\\n                mole.setState('score', mole.module.getScore());\\n                setPage('/rank');\\n            }\\n        }\\n    }, 1000)\\n    return (\\n        <div className='progress-wrap'>\\n            <progress className='progress-bar' value={props.time} max={props.time}/>\\n            <span className='progress-timer'>{`${props.time}초`}</span>\\n        </div>\\n    )\\n}\" }, ...ProgressBar.parameters };"],"names":[],"sourceRoot":""}