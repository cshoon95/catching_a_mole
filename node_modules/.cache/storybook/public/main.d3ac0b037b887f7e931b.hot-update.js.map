{"version":3,"file":"main.d3ac0b037b887f7e931b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AArCA;AAqCA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://kakao/./src/stories/comp/Progressbar.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { withKnobs } from '@storybook/addon-knobs'\\nimport { useState, useEffect } from \\\"react\\\";\\n\\ntype ProgressbarType = {\\n    /** 설정할 값 */\\n    time: number;\\n}\\n\\nexport const ProgressBar = (manager: ProgressbarType) => {\\n    const [ isShow, setIsShow ] = useState(false);\\n\\n    const ProgressBarManager = (props: ProgressbarType) => {\\n        const [ timer, setTimer ] = useState(props.time);\\n    \\n        useEffect(() => {\\n            if (isShow) {\\n                const id = setInterval(() => {\\n                    setTimer(timer - 1);\\n                }, 1000);\\n\\n                return () => clearInterval(id);\\n            }\\n    \\n        }, [timer]);\\n    \\n        setInterval(() => {\\n            const id = setTimer(timer - 1);\\n        }, 1000);\\n    \\n        return (\\n            <div className='progress-wrap'>\\n                <progress className='progress-bar' value={timer} max={props.time}/>\\n                <span className='progress-timer'>{`${timer}초`}</span>\\n            </div>\\n        )\\n    }\\n\\n    return (\\n        <>\\n        <button className=\\\"btn\\\" onClick={() => (setIsShow(true))}>\\n            Alert\\n        </button>\\n        <ProgressBarManager time={manager.time}/>\\n        </>\\n    ) \\n}\\nexport default {\\n    component: ProgressBar,\\n    title: 'Comp/ProgressBar',\\n    decorators: [withKnobs]\\n    \\n}\\n\\nProgressBar.args = {\\n    time: 60\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ProgressBar\":{\"startLoc\":{\"col\":27,\"line\":9},\"endLoc\":{\"col\":1,\"line\":46},\"startBody\":{\"col\":27,\"line\":9},\"endBody\":{\"col\":1,\"line\":46}}};\n    \nimport { withKnobs } from '@storybook/addon-knobs'\nimport { useState, useEffect } from \"react\";\n\ntype ProgressbarType = {\n    /** 설정할 값 */\n    time: number;\n}\n\nexport const ProgressBar = (manager: ProgressbarType) => {\n    const [ isShow, setIsShow ] = useState(false);\n\n    const ProgressBarManager = (props: ProgressbarType) => {\n        const [ timer, setTimer ] = useState(props.time);\n    \n        useEffect(() => {\n            if (isShow) {\n                const id = setInterval(() => {\n                    setTimer(timer - 1);\n                }, 1000);\n\n                return () => clearInterval(id);\n            }\n    \n        }, [timer]);\n    \n        setInterval(() => {\n            const id = setTimer(timer - 1);\n        }, 1000);\n    \n        return (\n            <div className='progress-wrap'>\n                <progress className='progress-bar' value={timer} max={props.time}/>\n                <span className='progress-timer'>{`${timer}초`}</span>\n            </div>\n        )\n    }\n\n    return (\n        <>\n        <button className=\"btn\" onClick={() => (setIsShow(true))}>\n            Alert\n        </button>\n        <ProgressBarManager time={manager.time}/>\n        </>\n    ) \n};export default {\n    component: ProgressBar,\n    title: 'Comp/ProgressBar',\n    decorators: [withKnobs]\n    \n}\n\nProgressBar.args = {\n    time: 60\n}\n\n\n\nProgressBar.parameters = { storySource: { source: \"(manager: ProgressbarType) => {\\n    const [ isShow, setIsShow ] = useState(false);\\n\\n    const ProgressBarManager = (props: ProgressbarType) => {\\n        const [ timer, setTimer ] = useState(props.time);\\n    \\n        useEffect(() => {\\n            if (isShow) {\\n                const id = setInterval(() => {\\n                    setTimer(timer - 1);\\n                }, 1000);\\n\\n                return () => clearInterval(id);\\n            }\\n    \\n        }, [timer]);\\n    \\n        setInterval(() => {\\n            const id = setTimer(timer - 1);\\n        }, 1000);\\n    \\n        return (\\n            <div className='progress-wrap'>\\n                <progress className='progress-bar' value={timer} max={props.time}/>\\n                <span className='progress-timer'>{`${timer}초`}</span>\\n            </div>\\n        )\\n    }\\n\\n    return (\\n        <>\\n        <button className=\\\"btn\\\" onClick={() => (setIsShow(true))}>\\n            Alert\\n        </button>\\n        <ProgressBarManager time={manager.time}/>\\n        </>\\n    ) \\n}\" }, ...ProgressBar.parameters };"],"names":[],"sourceRoot":""}