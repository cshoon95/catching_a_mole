{"version":3,"file":"main.02ed08d44590342031ac.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA","sources":["webpack://kakao/./src/stories/docs/Mole.stories.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport ReadyImg from '../asset/ready-img.png';\nimport GameImg from '../asset/game-img.png';\nimport RankImg from '../asset/rank-img.png';\nimport ProcessImg from '../asset/process-img.png';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Meta = makeShortcode(\"Meta\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"docs/Mole\" mdxType=\"Meta\" />\n    <style>{`\n    body {\n        overflow: scroll !important;\n    }\n`}</style>\n    <h1 {...{\n      \"id\": \"화면별-프로세스\"\n    }}>{`화면별 프로세스`}</h1>\n    <br />\n    <h2 {...{\n      \"id\": \"프로세스\"\n    }}>{`프로세스`}</h2>\n    <img src={ProcessImg} />\n    <h2 {...{\n      \"id\": \"준비-화면\"\n    }}>{`준비 화면`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`행, 열, 두더지 설정`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`열과 행은 최소 2, 최대 6까지 입력 가능`}</li>\n          <li parentName=\"ul\">{`입력한 두더지의 개수 이하만큼 두더지 출현`}</li>\n          <li parentName=\"ul\">{`최소 1마리에서 전체 굴 개수에 절반 미만으로 입력 가능`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`시작하기 버튼 클릭하면 게임 바로 실행`}</li>\n      <li parentName=\"ol\">{`왼쪽 상단 테스트 버튼 클릭 시 행, 열, 두더지 한 번에 입력 가능`}</li>\n    </ol>\n    <img src={ReadyImg} />\n    <h2 {...{\n      \"id\": \"게임-화면\"\n    }}>{`게임 화면`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`입력된 행과 열의 숫자만큼 두더지 굴 배치`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`일정시간 간격으로 나타났다 사라짐`}</li>\n          <li parentName=\"ul\">{`두더지 클릭 or 터치 시 땅으로 숨음`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`일시정지 버튼 클릭 시 게임 중지`}</li>\n      <li parentName=\"ol\">{`그만하기 버튼 클릭 시 확인 얼럿 띄우고 준비화면으로 이동`}</li>\n      <li parentName=\"ol\">{`왼쪽 상단 테스트 버튼 클릭 시 시간 조절 가능`}</li>\n    </ol>\n    <img src={GameImg} />\n    <h2 {...{\n      \"id\": \"결과-화면\"\n    }}>{`결과 화면`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`화면 이동시 모달로 점수 보여줌`}</li>\n      <li parentName=\"ol\">{`다시하기 클릭 시 지정했던 행, 열, 두더지 수로 다시 진행`}</li>\n      <li parentName=\"ol\">{`처음으로 진행 시 준비 화면으로 이동`}</li>\n      <li parentName=\"ol\">{`순위 제공`}</li>\n      <li parentName=\"ol\">{`순위 초기화 버튼 누르면 순위 초기화 가능`}</li>\n      <li parentName=\"ol\">{`왼쪽 상단 테스트 버튼 클릭 시 순위 테이블에 데이터 입력 가능`}</li>\n    </ol>\n    <img src={RankImg} />\n    <h2 {...{\n      \"id\": \"에러-및-개선점\"\n    }}>{`에러 및 개선점`}</h2>\n    <h3 {...{\n      \"id\": \"에러\"\n    }}>{`에러`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`두더지 클릭 시 1점씩 쌓여야 하지만, Element가 겹치면서 클릭 시 점수가 여러점 쌓이는 케이스가 있음.`}</li>\n      <li parentName=\"ol\">{`랭킹순위 sort `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`랭킹은 최대 10개`}</li>\n          <li parentName=\"ul\">{`arr.sort((a: {score: number, sysdate: string}, b: {score: number, sysdate: string}) => b.score - a.score).slice(0, num);`}</li>\n          <li parentName=\"ul\">{`리덕스 상태 에러 발생`}</li>\n          <li parentName=\"ul\">{`에러 발생으로 순위는 점수순이 아닌, 인덱스 순으로 10명 뽑아주고 있음.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"개선해야할-부분\"\n    }}>{`개선해야할 부분`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`의미있는 마크업 구성하지 못한 점`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`접근성 및 반응형`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`스토리북에 내용을 더 추가하지 못한 점`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`유틸 함수들 문서화 `}</li>\n          <li parentName=\"ul\">{`개발한 컴포넌트`}</li>\n        </ul>\n      </li>\n    </ol>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'docs/Mole', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}