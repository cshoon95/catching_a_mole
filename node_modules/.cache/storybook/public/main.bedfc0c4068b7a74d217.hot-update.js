"use strict";
globalThis["webpackHotUpdatekakao"]("main",{

/***/ "./src/stories/comp/Progressbar.stories.tsx":
/*!**************************************************!*\
  !*** ./src/stories/comp/Progressbar.stories.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProgressBar": () => (/* binding */ ProgressBar),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/addon-knobs */ "./node_modules/@storybook/addon-knobs/dist/index.js");
/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/soohoon/Desktop/kakao/20230207-jsh/src/stories/comp/Progressbar.stories.tsx",
  _s2 = __webpack_require__.$Refresh$.signature();
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { withKnobs } from '@storybook/addon-knobs'\nimport { useState, useEffect } from \"react\";\n\ntype ProgressbarType = {\n    /** 설정할 값 */\n    time: number;\n}\n\nexport const ProgressBar = (manager: ProgressbarType) => {\n    const [ isShow, setIsShow ] = useState(false);\n\n    const ProgressBarManager = (props: ProgressbarType) => {\n        const [ timer, setTimer ] = useState(props.time);\n    \n        useEffect(() => {\n            if (isShow) {\n                const id = setInterval(() => {\n                    setTimer(timer - 1);\n                }, 1000);\n\n                return () => clearInterval(id);\n            }\n    \n        }, [timer]);\n    \n        setInterval(() => {\n            const id = setTimer(timer - 1);\n        }, 1000);\n    \n        return (\n            <div className='progress-wrap'>\n                <progress className='progress-bar' value={timer} max={props.time}/>\n                <span className='progress-timer'>{`${timer}초`}</span>\n            </div>\n        )\n    }\n\n    return (\n        <>\n        <button className=\"btn\" onClick={() => (setIsShow(!isShow))}>\n            초기화\n        </button>\n        <ProgressBarManager time={manager.time}/>\n        </>\n    ) \n}\nexport default {\n    component: ProgressBar,\n    title: 'Comp/ProgressBar',\n    decorators: [withKnobs]\n    \n}\n\nProgressBar.args = {\n    time: 60\n}\n";
// @ts-ignore
var __LOCATIONS_MAP__ = {
  "ProgressBar": {
    "startLoc": {
      "col": 27,
      "line": 9
    },
    "endLoc": {
      "col": 1,
      "line": 46
    },
    "startBody": {
      "col": 27,
      "line": 9
    },
    "endBody": {
      "col": 1,
      "line": 46
    }
  }
};




const ProgressBar = manager => {
  _s2();
  var _s = __webpack_require__.$Refresh$.signature();
  const [isShow, setIsShow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const ProgressBarManager = props => {
    _s();
    const [timer, setTimer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(props.time);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      if (isShow) {
        const id = setInterval(() => {
          setTimer(timer - 1);
        }, 1000);
        return () => clearInterval(id);
      }
    }, [timer]);
    setInterval(() => {
      const id = setTimer(timer - 1);
    }, 1000);
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "progress-wrap",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("progress", {
        className: "progress-bar",
        value: timer,
        max: props.time
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 40,
        columnNumber: 17
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
        className: "progress-timer",
        children: `${timer}초`
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 17
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 13
    }, undefined);
  };
  _s(ProgressBarManager, "7/zOU+xx07y4RGgWilUv1/dT+5Y=");
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
      className: "btn",
      onClick: () => setIsShow(!isShow),
      children: "\uCD08\uAE30\uD654"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 9
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(ProgressBarManager, {
      time: manager.time
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 9
    }, undefined)]
  }, void 0, true);
};
_s2(ProgressBar, "Lw92Jm1dO1hdgb+if9nVuMI+J54=");
_c = ProgressBar;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  component: ProgressBar,
  title: 'Comp/ProgressBar',
  decorators: [_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__.withKnobs]
});
ProgressBar.args = {
  time: 60
};
ProgressBar.parameters = {
  storySource: {
    source: "(manager: ProgressbarType) => {\n    const [ isShow, setIsShow ] = useState(false);\n\n    const ProgressBarManager = (props: ProgressbarType) => {\n        const [ timer, setTimer ] = useState(props.time);\n    \n        useEffect(() => {\n            if (isShow) {\n                const id = setInterval(() => {\n                    setTimer(timer - 1);\n                }, 1000);\n\n                return () => clearInterval(id);\n            }\n    \n        }, [timer]);\n    \n        setInterval(() => {\n            const id = setTimer(timer - 1);\n        }, 1000);\n    \n        return (\n            <div className='progress-wrap'>\n                <progress className='progress-bar' value={timer} max={props.time}/>\n                <span className='progress-timer'>{`${timer}초`}</span>\n            </div>\n        )\n    }\n\n    return (\n        <>\n        <button className=\"btn\" onClick={() => (setIsShow(!isShow))}>\n            초기화\n        </button>\n        <ProgressBarManager time={manager.time}/>\n        </>\n    ) \n}"
  },
  ...ProgressBar.parameters
};
var _c;
__webpack_require__.$Refresh$.register(_c, "ProgressBar");
const __namedExportsOrder = ["ProgressBar"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    ProgressBar.displayName = "ProgressBar";
    // @ts-ignore
    ProgressBar.__docgenInfo = { "description": "", "displayName": "ProgressBar", "props": { "time": { "defaultValue": null, "description": "\uC124\uC815\uD560 \uAC12", "name": "time", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/stories/comp/Progressbar.stories.tsx#ProgressBar"] = { docgenInfo: ProgressBar.__docgenInfo, name: "ProgressBar", path: "src/stories/comp/Progressbar.stories.tsx#ProgressBar" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=main.bedfc0c4068b7a74d217.hot-update.js.map